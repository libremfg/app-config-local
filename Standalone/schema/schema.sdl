"""
ISA88.00.04 Event

An event object shall be represented by the model in Figure 11. An event is a discrete occurrence in 
time. Event objects document occurrences and can be stored in a batch production record. This is usually 
done when an event has meaning or significance to the manufacture of a product.

There are different types of event objects. Each event is identified by an event type. Within an event 
type there are different sub-types. Each event type and subtype may use a different subset of the event 
attributes.

Any event may contain zero or more user-defined attributes. Attributes not included in the event object 
may be defined in user-defined attribute objects. This may be required when specific systems generate 
event content not covered by the standard event object.

Event objects may be associated with other events. For example, a process signal may generate a high 
alarm, and then a high-high alarm before the high alarm is acknowledged. Then the high-high alarm may 
be acknowledged. All of the event objects in this scenario could be associated with each other to make 
the information more meaningful than a set of three unassociated event objects with some common data 
would be.
"""
type Event @withSubscription @key(fields: "iid") {
    """ Unique internal database identifier. """
    iid: ID!

    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime!

    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime

    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default(
    add: { value: "$now" }
    )

    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
    )

    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])

    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    """ Defines the type of the event. """
    eventType: String @search(by: [hash])
    
    """ Defines the subtype of the event. """
    eventSubtype: String @search(by: [hash])
    
    """ Identification of the equipment associated with the event. """
    equipment: Equipment @hasInverse(field: events)

    """ Value associated with the event. """
    value: String

    """ The value prior to the change documented by the event. """
    previousValue: String

    """ Text describing the event. """
    messageText: String @search(by: [hash])

    """ Identification of the person associated with the event. """
    personID: String @search(by: [hash])

    """ Unique identification of the computer where the event originated. """
    computerID: String @search(by: [hash])

    """ 
    Reference to a procedural element. This maps to an element of the procedural hierarchy, such as a 
    phase in a control recipe, or an operation in a control recipe.
    """
    proceduralElementReference: String @search(by: [hash])

    """ The use category of the event. """
    category: String @search(by: [hash])


    jobResponse: JobResponse @hasInverse(field: events)
    effectiveDateTime: DateTime @search
    recordedDateTime: DateTime @search
    attribute: String @search(by: [hash])
    comments: String @search(by: [hash])
    alarmEvents: [AlarmEvent] @hasInverse(field: event)
}


"""
ISA88.00.04 Alarm Event
"""
type AlarmEvent @withSubscription @key(fields: "iid") {
    """ Unique internal database identifier. """
    iid: ID!

    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime!

    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime

    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default(
    add: { value: "$now" }
    )

    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
    )

    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])

    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    
    """ Record of different events during an alarm lifecycle. """
    alarmEvent: String! @search(by: [hash])

    """ Value a measurement exceeded that caused the alarm. """
    alarmLimit: String @search(by: [hash])

    """ The type of alarm from a process perspective. """
    alarmType: String @search(by: [hash])
    
    """ Indication of the importance of an event. """
    priority: String @search(by: [hash])


    event: Event @hasInverse(field: alarmEvents)
    effectiveDateTime: DateTime @search
    recordedDateTime: DateTime @search
}
"""
The Hierarchy Scope defines where the exchanged information fits within the 
role based equipment hierarchy. It defines the scope of the exchanged 
information, such as a site or area for which the information is relevant. The 
Hierarchy scope identifies the associated instance in the role-based equipment 
hierarchy.
"""
type HierarchyScope @withSubscription @key(fields: "iid") {
    """ Unique internal database identifier. """
    iid: ID!

    """ An identification of the specific property. """
    id: String! @id @search(by: [fulltext, exact])

    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime!

    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime

    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default(
        add: { value: "$now" }
    )

    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default(
        add: { value: "$now" }
        update: { value: "$now" }
    )

    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])

    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    """ A unique identification of an equipment element. """
    equipment: Equipment @hasInverse(field: hierarchyScope)

    """ Identification of the equipment level if the equipment element is defined. """
    equipmentLevel: EquipmentElementLevel

    """ The child hierarchy scope(s) contained within this hierarchy scope. """
    children: [HierarchyScope] @hasInverse(field: parent)

    """ The parent hierarchy scope(s) for this hierarchy scope. """
    parent: HierarchyScope @hasInverse(field: children)
      
    """ The Person(s) associated with this HierarchyScope. """
    persons: [Person] @hasInverse(field: hierarchyScope)

    """ The PersonnelClass(s) associated with this HierarchyScope. """
    personnelClasses: [PersonnelClass] @hasInverse(field: hierarchyScope)

    """ The material class(s) associated with this hierarchy scope. """
    materialClasses: [MaterialClass] @hasInverse(field: hierarchyScope)

    """ The material class(s) associated with this hierarchy scope. """
    materialDefinitions: [MaterialDefinition] @hasInverse(field: hierarchyScope)
    
    """ The material class(s) associated with this hierarchy scope. """
    materialLots: [MaterialLot] @hasInverse(field: hierarchyScope)

    """ The material class(s) associated with this hierarchy scope. """
    materialSubLots: [MaterialSubLot] @hasInverse(field: hierarchyScope)
}
"""
The spatial definition provides a means of communicating zero-dimensional point, one-dimensional line 
or two-dimensional shape or three-dimensional solid geo-spatial location data for planning/scheduling, 
actuals, resources, and analytics. Spatial definition identifies a value and the predefined coordinate 
reference system using following attributes.

    a) value;
    b) format;
    c) spatial reference identifier (SRID); and
    d) SRID sridAuthority

A fully qualified spatial definition exchange has all four attributes as a minimum. In some information 
exchanges, sending and receiving applications may have a specified agreement on format, SRID, and SRID 
authority. 

Spatial definition is distinct from and separate to storage location and physical location. Storage 
location attribute is defined for material lots and material sublots as a nonspatial definition of 
location. The physical location attribute logically identifies a 'place' which is actual physical 
location of the physical asset.
"""
type SpatialDefinition @withSubscription @key(fields: "iid") {
    """ Unique internal database identifier. """
    iid: ID!

    """ A string to uniquely identify a spatial definition. """
    id: String! @id @search(by: [fulltext, exact])

    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime!

    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime

    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default(
        add: { value: "$now" }
    )

    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default(
        add: { value: "$now" }
        update: { value: "$now" }
    )

    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])

    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    """ A string to uniquely identify a spatial definition. """
    value: String @search(by: [fulltext, exact])

    """ An enumerator that determines the format of the value attribute. """
    format: String @search(by: [fulltext, exact])


    """
    SRID is the Spatial Reference Identifier which identifies the coordinate reference system to identify 
    a predefined coordinate reference system (pre-configured into communication systems).
    """
    srid: String @search(by: [fulltext, exact])

    """
    The SRID authority identifies the authority that defines the coordinate reference system identified 
    by the SRID.
    """
    sridAuthority: String @search(by: [fulltext, exact])
   
    """ The Person(s) associated with this spatial definition. """
    persons: [Person] @hasInverse(field: spatialDefinition)
}

# ################################################################################
# Operational Location Information Model
# ################################################################################
#
# Operational location define the logical or physical places in which resources 
# are located or are expected to be located within a plant. Operational locations
# may be made up of smaller operational locations. An operational location may 
# belong to one or more operational location classes. An operational location 
# class may be a derived class specialization of one or more base operational 
# location classes.

"""
A representation of a grouping of operational locations with similar characteristics for a definite 
purpose such as manufacturing operations definition, scheduling, capability and performance shall be 
presented as an operational location class. Any operational location may be a member of zero ormore 
operational location classes.

An operational class may be defined as a derived class specialization of zero or more base operational classes.

An operational location class may be made up of zero or more operational location classes.
"""
type OperationalLocationClass @withSubscription @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!

  """
  A unique identification of a specific operational location, within the hierarchy scope of the 
  operational location.
  """
  id: String! @search(by: [fulltext, exact])

  """
  A named unique instance of the entity. Note that this attribute is subject to change, based on 
  the implementation timeline of composite keys within dgraph.
  """
  key: String! @id @search(by: [fulltext, exact])

  """
  Entity to define the specific version of the entity. Purposely free for to allow use with a specific 
  revision scheme. For example `1`, `2` or `Rev A03`, `Rev B01`. Versions are lexicographically compared.
  """
  version: String! @search(by: [fulltext, exact])

  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime!

  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime

  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])

  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  """ A short description of the material definition. """
  name: String @search(by: [fulltext])

  """ Contains additional information and descriptions of the operational location. """
  description: String @search(by: [fulltext, exact])

  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope

  """ The derived operational location class includes properties of this base operational location class(s). """
  includesPropertiesOf: [OperationalLocationClass] @hasInverse(field: includedIn)

  """ The operational location class(s) being derived from this base operational location class(s). """
  includedIn: [OperationalLocationClass] @hasInverse(field: includesPropertiesOf)

  """ This parent operational location class is whole of the child operational location class(s) as the part. """
  children: [OperationalLocationClass] @hasInverse(field: parent)

  """ The parent operational location class that this child operational location class makes up a part. """
  parent: OperationalLocationClass @hasInverse(field: children)

  """ The operational location class property(s) of this operational location class. """
  properties: [OperationalLocationClassProperty] @hasInverse(field: operationalLocationClass)

  """ The operational location(s) defined by this operational location class. """
  defines: [OperationalLocation] @hasInverse(field: definedBy)
}

"""
Properties of an operational location class shall be defined as operational location class property(s). 
An operational location class property may contain nested operational location class property(s). An 
operational location class property may have zero or more operational location property(s) mapping to it.
"""
type OperationalLocationClassProperty @withSubscription @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!

  """ A unique identification of a specific operational location class property within the operational location class. """
  id: String! @id @search(by: [fulltext, exact])

  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime!

  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime

  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])

  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  """ Additional information about the operational location class property. """
  description: String @search(by: [fulltext, exact]) 

  """ The value, set of values, or range of the property. """
  value: String @search(by: [fulltext, exact])

  """ The unit of measure of the associated property value. """
  valueUnitOfMeasure: UnitOfMeasure

  """ Defines the type of the property. """
  propertyType: Isa95PropertyType!

  """ The child operational location class property(s) of this operational location class property. """
  children: [OperationalLocationClassProperty] @hasInverse(field: parent)

  """ The parent operational location class property of this operational location class property. """
  parent: OperationalLocationClassProperty @hasInverse(field: children)

  """ The operational location class property(s) of this operational location class """
  operationalLocationClass: OperationalLocationClass! @hasInverse(field: properties)

  """ The operational location property(s) is mapping to this operational location class property. """
  mapsTo: [OperationalLocationProperty] @hasInverse(field: mapsTo)
}

"""
A logical or physical location where a material lot, material sublot, equipment, physical asset or person 
is located or expected to be located shallbe presented as an operational location. Operational locations 
may be made up of other operational locations.
"""
type OperationalLocation @withSubscription @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!

  """
  A unique identification of a specific operational location, within the hierarchy scope of the 
  operational location.
  """
  id: String! @search(by: [fulltext, exact])

  """
  A named unique instance of the entity. Note that this attribute is subject to change, based on 
  the implementation timeline of composite keys within dgraph.
  """
  key: String! @id @search(by: [fulltext, exact])

  """
  Entity to define the specific version of the entity. Purposely free for to allow use with a specific 
  revision scheme. For example `1`, `2` or `Rev A03`, `Rev B01`. Versions are lexicographically compared.
  """
  version: String! @search(by: [fulltext, exact])

  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime!

  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime

  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])

  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  """ A short description of the material definition. """
  name: String @search(by: [fulltext])

  """ Contains additional information and descriptions of the operational location. """
  description: String @search(by: [fulltext, exact])

  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope

  """ 
  Spatially defines the operational location as a zero-dimensional point, one-dimensional line, or 
  two-dimensional shape or three dimensional solid. 
  """
  spatialDefinition: SpatialDefinition

  """ The operational location class(s) to which this operational location belong. """
  definedBy: [OperationalLocationClass] @hasInverse(field: defines)

  """ The operational location property(s) of this operational location. """
  properties: [OperationalLocationProperty] @hasInverse(field: operationalLocation)

  """ The child operational location(s) contained within this operational location. """
  children: [OperationalLocation] @hasInverse(field: parent)

  """ The parent operational location of child this operational location. """
  parent: OperationalLocation @hasInverse(field: children)

  """ Identifies any material lot(s) stored at this operational location. """
  materialLots: [MaterialLot] @hasInverse(field: storageLocationOperationalLocation)

  """ Identifies any material sublot(s) stored at this operational location. """
  materialSubLots: [MaterialSubLot] @hasInverse(field: storageLocationOperationalLocation)

  """ The person(s) associated with this oeprational location. """
  persons: [Person] @hasInverse(field: operationalLocation)
}

"""
Properties of operational locations shall be presented as operational location properties. An operational 
location shall have zero or more operational location properties. These specify the current property 
values of the operational location for the associated operational location class property. Operational 
location properties may include a unit of measure.

Operational location properties may contain nested operational location properties.
"""
type OperationalLocationProperty @withSubscription @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!

  """ A unique identification of a specific operational location class property within the operational location class. """
  id: String! @id @search(by: [fulltext, exact])

  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime!

  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime

  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])

  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  """ Additional information about the operational location property. """
  description: String @search(by: [fulltext, exact]) 

  """ The value, set of values, or range of the property. """
  value: String @search(by: [fulltext, exact])

  """ The unit of measure of the associated property value. """
  valueUnitOfMeasure: UnitOfMeasure

  """ The child operational location property(s) of this operational location property. """
  children: [OperationalLocationProperty] @hasInverse(field: parent)

  """ The parent operational location property of this operational location property. """
  parent: OperationalLocationProperty @hasInverse(field: children)

  """ This operational location property(s) of the operational location. """
  operationalLocation: OperationalLocation! @hasInverse(field: properties)

  """ The operational location class property to which this operational location class property maps. """
  mapsTo: OperationalLocationClassProperty @hasInverse(field: mapsTo)
}
# ################################################################################
# Personnel Information Model
# ################################################################################
#
# The personnel model contains the information about specific personnel,
# classes of personnel, and qualifications of personnel.

###################################################################################
"""
A representation of a grouping of persons with similar characteristics for a definite 
purpose such as manufacturing operations definition, scheduling, capability and performance 
shall be presented as a personnel class. Any person may be a member of zero or 
more personnel classes. 

A personnel class may be defined as a specialization of zero or more personnel class. 
A personnel class may be made up of zero or more personnel class(s).

A personnel class may be tested by the evaluation of the test specification criteria 
in the test specification that references the evaluated property and may be recorded 
in an evaluated criterion result attribute in the test result.

EXAMPLE: Personnel classes are cook machine mechanics, slicing machine operators, 
          cat-cracker operator, and zipper line inspectors.
"""
type PersonnelClass @withSubscription @key(fields: "iid")
@auth(
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  query: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryPersonnelClass @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
    {rule: """ query{ queryPersonnelClass (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  add: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryPersonnelClass @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
    {rule: """ query{ queryPersonnelClass (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  delete: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryPersonnelClass @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
    {rule: """ query{ queryPersonnelClass (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
){
### IDENTIFICATION ############
  """
  Database unique identifier.
  """
  iid: ID!
  acl:[AccessPermission]

### METADATA ############
  """
  The date and time in UTC that the entity was created.
  """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """
  The date and time in UTC that the entity was last mutated.
  """
  _modifiedOn: DateTime! @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """
  The username from the token which created the entity.
  """
  _createdBy: String!

  """
  The username from the token from the last mutation of this entity.
  """
  _modifiedBy: String

### VERSIONING ############
  """
  Entity to define the specific version of the entity. Purposely free for to allow 
  the customer to use their specific revision scheme.
  Versions in libre a lexicographicallycompared.
  EXAMPLE: `1`; `2`; `Rev A03`; `Rev B01`.
  """
  versions: [PersonnelClassVersion] @hasInverse(field: personnelClass)
  activeVersion: PersonnelClassVersion

### ISA95 ATTRIBUTES ############
  """
  A unique identification of a specific personnel class.
  These are not necessarily job titles but identify classes that are referenced in other .
  parts of the model.

  Example: Widget assembly operator
  """
  id: String! @id @search(by:[fulltext,exact])

  """
  Identifies where the exchanged information fits within the role-based equipment hierarchy.
  Example:
  South Shore (Site) / Work Line (Area)	;
  South Shore (SITE) / Packaging (Area)	;
  Mixer Sample Port (Work Unit)	Receiving dock (Work Center).
  """
  hierarchyScope: HierarchyScope @hasInverse(field: personnelClasses)

### ISA95 RELATIONSHIPS ############
  """
  Predominate Relationship.
  Role: Personnel class parent type.
  Relationship Name: Includes properties of.
  Description: This personnel class(s) includes properties of the parent personnel class.
  """
  parent: [PersonnelClass] @hasInverse(field: children)

  """
  Subordinate Relationship.
  Role: Personnel class parent type.
  Relationship Name: Includes properties of.
  Description: The child personnel class(s) include properties of this personnel class.
  """
  children: [PersonnelClass] @hasInverse(field: parent)


  """
  Subordinate Relationship
  Role: NA
  Relationship Name: defines (Listed as Defined By in ISA95).
  Description: 
    The person supports this personnel class.
    The person objects support the personnel class property(s) associated with this personnel class.
  """
  persons: [PersonVersion] @hasInverse(field: definedByPersonnelClasses)

  """
  Subordinate Relationship.
  Role: NA.
  Relationship Name: Specifies test for.
  Description: 
    The ID of this testable object ID(s) evaluated by the test specification.
  """
  specifiesTestFor: [TestSpecification]

  """
  Predominate Relationship.
  Role: Test specification.
  Relationship Name: Specifies.
  Description: 
    The test specification(s) used to evaluate this testable object.
  """
  specifiesTestSpecifications: [TestSpecification]

  """
  Subordinate Relationship.
  Role: NA.
  Relationship Name: Records test results for.
  Description: 
  The test result records the evaluated criterion result attribute and property measurement for this testable object.
  """
  recordsTestResultsFor: [TestResult]

#### LEGACY Remains in place to maintain build compatibility with existing entities
  personnelRequirements: [PersonnelRequirement]@hasInverse(field: personnelClass)


  """ The ID of this testable object ID(s) evaluated by the test specification. """
  testedBy: [TestSpecification] @hasInverse(field: requiredByPersonnelClass)

  """ The test specification(s) used to evaluate this testable object. """
  specifiesTests: [TestSpecification] @hasInverse(field: testsPersonnelClass)

  """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
  testResults: [TestResult] @hasInverse(field: personnelClass)
}
"""
A representation of a grouping of persons with similar characteristics for a definite
purpose such as manufacturing operations definition, scheduling, capability and performance
shall be presented as a personnel class. Any person may be a member of zero or
more personnel classes.

A personnel class may be defined as a specialization of zero or more personnel class.
A personnel class may be made up of zero or more personnel class(s).

A personnel class may be tested by the evaluation of the test specification criteria
in the test specification that references the evaluated property and may be recorded
in an evaluated criterion result attribute in the test result.

EXAMPLE: Personnel classes are cook machine mechanics, slicing machine operators,
cat-cracker operator, and zipper line inspectors.
"""
type PersonnelClassVersion @withSubscription @primaryKey(fields:["id","version"]) @key(fields: "iid") {
  ### IDENTIFICATION ############
  """
  Database unique identifier.
  """
  iid: ID!

  ### METADATA ############
  """
  The date and time in UTC that the entity was created.
  """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """
  The date and time in UTC that the entity was last mutated.
  """
  _modifiedOn: DateTime! @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """
  The username from the token which created the entity.
  """
  _createdBy: String!

  """
  The username from the token from the last mutation of this entity.
  """
  _modifiedBy: String

  ### VERSIONING ############
  personnelClass: PersonnelClass! @hasInverse(field: versions)
  """
  Entity to define the specific version of the entity. Purposely free for to allow
  the customer to use their specific revision scheme.
  Versions in libre a lexicographicallycompared.
  EXAMPLE: `1`; `2`; `Rev A03`; `Rev B01`.
  """
  version: String! @search(by:[fulltext,exact])

  """
  Entity is considered active from this point in time forward.
  """
  effectiveStart: DateTime!

  """
  Entity is considered active until this time, or until the end of time if empty.
  """
  effectiveEnd: DateTime

  ### ISA95 ATTRIBUTES ############
  """
  A unique identification of a specific personnel class.
  These are not necessarily job titles but identify classes that are referenced in other .
  parts of the model.

  Example: Widget assembly operator
  """
  id: String! @search(by:[fulltext,exact])

  """
  Additional information and description about the personnel class.
  Example:
  General information about widget assembly operators;
  Highest grade for maintenance technician;
  Highest level of lab assistants;
  Person responsible for the warehouse.
  """
  description: String @search(by:[fulltext,exact])


  """
  Predominate Relationship.
  Role: Personnel class property.
  Relationship Name: Has properties of.
  Description: The personnel class property(s) of this personnel class.
  """
  properties: [PersonnelClassProperty] @hasInverse(field: personnelClass)

}

###################################################################################
"""
A representation of a specifically identified individual shall be presented as a person. A person
may be a member of zero or more personnel classes.

A person may be tested by the evaluation of the test specification criteria in the test specification
that references the evaluated property and may be recorded in an evaluated criterion result attribute
in the test result.

Person shall include a unique identification of the individual. 
"""
type Person @withSubscription @key(fields: "iid")
@auth(
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  query: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryPerson @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
    {rule: """ query{ queryPerson (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  add: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryPerson @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
    {rule: """ query{ queryPerson (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  delete: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryPerson @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
    {rule: """ query{ queryPerson (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
){

### IDENTIFICATION ############
  """
  Database unique identifier.
  """
  iid: ID!
  acl:[AccessPermission]

### METADATA ############
  """
  The date and time in UTC that the entity was created.
  """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """
  The date and time in UTC that the entity was last mutated.
  """
  _modifiedOn: DateTime! @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """
  The username from the token which created the entity.
  """
  _createdBy: String!

  """
  The username from the token from the last mutation of this entity.
  """
  _modifiedBy: String

  """
  link to all available versions for this PersonEquipment
  """
  versions: [PersonVersion] @hasInverse(field: person)
  """
  the currently active version
  """
  activeVersion:PersonVersion

### ISA95 ATTRIBUTES ############ 
  """
  A unique identification of a specific person, within the scope of the information exchanged 
  (operations capability, operations schedule,  operations performance, …).
  Example:  Employee 23;	22828;	999-123-4567;	007.
  """
  id: String! @id @search(by:[fulltext,exact])

  """
  Identifies where the exchanged information fits within the role-based equipment hierarchy.
  EXAMPLE:
  South Shore (Site) / Work Line (Area)	;
  South Shore (SITE) / Packaging (Area)	;
  Mixer Sample Port (Work Unit)	Receiving dock (Work Center).
  """
  hierarchyScope: HierarchyScope @hasInverse(field: persons)


  """
  Spatially defines the person as a zero-dimensional point, one-dimensional line, or two-dimensional 
  shape or three dimensional solid.
  EXAMPLE: WKT / POLYGON ( ( -646.99 676.18,-645.14 683.09, -646.99 676.18 ) ).
  """
  spatialDefinition: SpatialDefinition @hasInverse(field: persons)

  """
  Identifies the operational location of the person.
  EXAMPLE:  SST57; Maintenance Shed 4S;	Sample Pickup 3;	Waypoint 7.
  """
  operationalLocation: OperationalLocation @hasInverse(field: persons)

  """
  Indicates whether the operational location attribute refers to an operational location object or 
  contains a description of the operational location.
  EXAMPLE:  Operational Location;	Description.
  """
  operationalLocationType: String

  """ The personel actual(s) associated with this person. """
  personnelActual: [PersonnelActual] @hasInverse(field: person)

  """
  Subordinate Relationship.
  Role: NA.
  Relationship Name: Specifies test for.
  Description: 
    The ID of this testable object ID(s) evaluated by the test specification.
  """
  specifiesTestFor: [TestSpecification]

  """
  Predominate Relationship.
  Role: Test specification.
  Relationship Name: Specifies.
  Description: 
    The test specification(s) used to evaluate this testable object.
  """
  specifiesTestSpecifications: [TestSpecification]

  """
  Subordinate Relationship
  Role: NA.
  Relationship Name: Records test results for.
  Description: 
    The test result records the evaluated criterion result attribute and property measurement for this testable object.
  """
  recordsTestResultsFor: [TestResult]


#### LEGACY Remains in place to maintain build compatibility with existing entities
  personnelRequirements: [PersonnelRequirement]@hasInverse(field: person)

  """ The ID of this testable object ID(s) evaluated by the test specification. """
  testedBy: [TestSpecification] @hasInverse(field: requiredByPerson)

  """ The test specification(s) used to evaluate this testable object. """
  specifiesTests: [TestSpecification] @hasInverse(field: testsPerson)

  """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
  testResults: [TestResult] @hasInverse(field: person)
}

"""
A representation of a specifically identified individual shall be presented as a person. A person
may be a member of zero or more personnel classes.

A person may be tested by the evaluation of the test specification criteria in the test specification
that references the evaluated property and may be recorded in an evaluated criterion result attribute
in the test result.

Person shall include a unique identification of the individual.
"""
type PersonVersion @withSubscription @primaryKey(fields:["id","version"])  @key(fields: "iid") {

  ### IDENTIFICATION ############
  """
  Database unique identifier.
  """
  iid: ID!

  ### METADATA ############
  """
  The date and time in UTC that the entity was created.
  """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """
  The date and time in UTC that the entity was last mutated.
  """
  _modifiedOn: DateTime! @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """
  The username from the token which created the entity.
  """
  _createdBy: String!

  """
  The username from the token from the last mutation of this entity.
  """
  _modifiedBy: String

  ### VERSIONING ############
  """
  Entity to define the specific version of the entity. Purposely free for to allow
  the customer to use their specific revision scheme.
  Versions in libre a lexicographicallycompared.
  EXAMPLE: `1`; `2`; `Rev A03`; `Rev B01`.
  """
  version: String! @search(by:[fulltext,exact])

  person: Person! @hasInverse(field: versions)
  """
  Entity is considered active from this point in time forward.
  """
  effectiveStart: DateTime!

  """
  Entity is considered active until this time, or until the end of time if empty.
  """
  effectiveEnd: DateTime

  ### ISA95 ATTRIBUTES ############
  """
  A unique identification of a specific person, within the scope of the information exchanged
  (operations capability, operations schedule,  operations performance, …).
  Example:  Employee 23;	22828;	999-123-4567;	007.
  """
  id: String! @search(by:[fulltext,exact])

  """
  Additional information about the resource.
  EXAMPLE:   Person Information;	Maintenance Tech;	Lab Tech;	Driver.
  """
  description: String @search(by:[fulltext,exact])

  """
  The name of the individual.
  This is meant as an additional identification of the resource, but only as information and not
  as a unique value.
  EXAMPLE:  Jane;	Jim;	John;	James.
  """
  name: String! @search(by:[fulltext,exact])


  ### ISA95 RELATIONSHIPS ############
  """
  Predominate Relationship.
  Role: Personnel class.
  Relationship Name: Defined by
  Description:
  Personnel classes supported by this person.
  This person supports the personnel class property(s) associated with the personnel class.
  """
  definedByPersonnelClasses: [PersonnelClass] @hasInverse(field: persons)

  """
  Predominate Relationship.
  Role: Person property.
  Relationship Name: Has values of.
  Description:
  The person property values of this person.
  """
  properties: [PersonProperty] @hasInverse(field: person)

}

###################################################################################
"""
Properties of a personnel class shall be presented as personnel class properties. 
Each personnel class shall have zero or more recognized properties.

EXAMPLE 1 Personnel class properties for the personnel class operators can be a class 1 certified, 
class 2 certified, night shift, and exposure hours.

Operations requests may specify required personnel class property requirements for an operations 
segment.

A personnel class property may be tested to the evaluated property in a test specification where 
the measured results may be recorded in a property measurement attribute in a test result. 
The measured results may also be evaluated to the test specification criteria in the test specification 
that references the evaluated property where they may be recorded in an evaluated criterion result attribute 
in the test result.

Personnel class property(s) may contain nested personnel class property(s). 
"""
type PersonnelClassProperty @withSubscription @key(fields: "iid")
@auth(
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  query: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryPersonnelClassProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
    {rule: """ query{ queryPersonnelClassProperty (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  add: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryPersonnelClassProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
    {rule: """ query{ queryPersonnelClassProperty (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  delete: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryPersonnelClassProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
    {rule: """ query{ queryPersonnelClassProperty (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
){

### IDENTIFICATION ############
  """
  Database unique identifier.
  """
  iid: ID!
  acl:[AccessPermission]

### METADATA ############
  """
  The date and time in UTC that the entity was created.
  """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """
  The date and time in UTC that the entity was last mutated.
  """
  _modifiedOn: DateTime! @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """
  The username from the token which created the entity.
  """
  _createdBy: String!

  """
  The username from the token from the last mutation of this entity.
  """
  _modifiedBy: String
  
### ISA95 ATTRIBUTES ############
  
  """
  An identification of the specific property, unique under the scope of the parent personnel class object.
  Example:  Class 1 Certified;	Electrician Skills Class;	LGC Model 1003 Certified Operator;	Lift Truck Driver
  """
  id: String! @search(by:[fulltext,exact])

  """
  Additional information and description about the personnel class property.
  EXAMPLE:
    Indicates the certification level of the operator;
    Level of Skill Attained	Indicates if qualified to run equipment;
    Indicates if allowed to drive lift trucks.
  """
  description: String @search(by:[fulltext,exact])

  """
  Defines the type of the property.
  Defined types are
    class type: the property value is defined for the class and there is no value associated with an instance;
    instance type: the property value of the class is undefined; 
    default type: the property value is defined for the class as the default instance value, but individual instances of the class may redefine specific values.
  """
  propertyType: Isa95PropertyType!

  """
  The value, set of values, or range of the property.
  This presents a range of possible numeric values, a list of possible values, or it can be empty 
  if any value is valid.
  EXAMPLE:  <True, False>	; <Master, Journeyman, Apprentice>; <1-100>
  """
  value: String

  """
  The unit of measure of the associated property value.
  """
  valueUnitOfMeasure: UnitOfMeasure

### ISA95 RELATIONSHIPS ############  
  """
  Subordinate Relationship.
  Role: NA.
  Relationship Name: Has properties of.
  Description: 
    The personnel class defined in part by this personnel class property.
  """
  personnelClass: PersonnelClassVersion! @hasInverse(field: properties)

  """
  Predominate Relationship.
  Role: Personnel class property child.
  Relationship Name: Contains.
  Description: 
    The nested personnel class property(s) makes up part of this personnel class property as the whole.
  """
  children: [PersonnelClassProperty] @hasInverse(field: parent)

  """
  Subordinate Relationship.
  Role: Personnel class property parent.
  Relationship Name: IsContainedWithin.
  Description: 
    This nested personnel class property makes up part of the parent personnel class property as the whole.
  """
  parent: PersonnelClassProperty @hasInverse(field: children)

  """
  Subordinate Relationship.
  Role: NA.
  Relationship Name: Maps to.
  Description: 
    If the person supports a personnel class, this personnel class property(s) is applied in the person property(s).
    The person property maps to this corresponding personnel class property.
  """
  mapsTo: PersonProperty @hasInverse(field: mapsTo)

#  """
#  This testable object property is measured to the test specification containing the evaluated property.
#  """
#  correspondsToTestEvaluatedProperty: EvaluatedProperty

#  """
#  This PersonnelClassProperty records the measurement result for these PropertyMeasurement(s)
#  """
#  recordsMeasurementOf: [PropertyMeasurement]
}

###################################################################################
"""
Properties of a person shall be presented as person properties. Each person shall have zero or more person properties. 
These specify the current property values of the person for the associated personnel class property.

EXAMPLE: A person property can be night shift and its value would be available, and a person property can be 
exposure hours available and its value would be 4.

Person properties may include the current availability of a person and other current information, 
such as location and assigned activity, and the unit of measure of the current information.

A person property may be tested to the evaluated property in a test specification where the measured 
results may be recorded in a property measurement attribute in a test result. The measured results may also be 
evaluated to the test specification criteria in the test specification that references the evaluated property 
where they may be recorded in an evaluated criterion result attribute in the test result. 

Person properties may contain nested person properties.
"""
type PersonProperty @withSubscription @key(fields: "iid")
@auth(
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  query: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryPersonProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
    {rule: """ query{ queryPersonProperty (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  add: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryPersonProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
    {rule: """ query{ queryPersonProperty (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  delete: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryPersonProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
    {rule: """ query{ queryPersonProperty (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
){

### IDENTIFICATION ############
  """
  Database unique identifier.
  """
  iid: ID!
  acl:[AccessPermission]

### METADATA ############
  """
  The date and time in UTC that the entity was created.
  """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """
  The date and time in UTC that the entity was last mutated.
  """
  _modifiedOn: DateTime! @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """
  The username from the token which created the entity.
  """
  _createdBy: String!

  """
  The username from the token from the last mutation of this entity.
  """
  _modifiedBy: String
  
### ISA95 ATTRIBUTES ############
  """
  An identification of the specific property.
  Example:  Exposure Hours Available;	Union ID;	LGC Model 1003 Certified Operator;	Lift Truck Driver.
  """
  id: String! @search(by:[fulltext,exact])

  """
  Additional information about the person property.

  EXAMPLE:
    Indicates number of exposure hours available this month;
    Union ID number;
    Indicates if qualified to run equipment;
    Indicates if allowed to drive lift trucks.
  """
  description: String @search(by:[fulltext,exact])

  """
  The value, set of values, or range of the property.
  The value(s) is assumed to be within the range or set of defined values for the related personnel class property.

  EXAMPLE: 4; CA55363;	True;	False.
  """
  value: String

  """
  The unit of measure of the associated property value.
  EXAMPLE: Hours;	String;	Boolean; Boolean.
  """
  valueUnitOfMeasure: UnitOfMeasure

### ISA95 RELATIONSHIPS ############  
  """
  Subordinate Relationship.
  Role: NA.
  Relationship Name: Has values of.
  Description: 
    This person property values in part for the person.
  """
  person: PersonVersion! @hasInverse(field: properties)

  """
  Predominate Relationship.
  Role: Person property.
  Relationship Name: Contains.
  Description: 
    This nested person property(s) is part of the person property as the whole.
  """
  children: [PersonProperty] @hasInverse(field: parent)

  """
  Subordinate Relationship.
  Role: NA.
  Relationship Name: Has values of.
  Description: 
    This nested person property makes up part of the parent person property as the whole.
  """
  parent: PersonProperty @hasInverse(field: children)

  """
  Predominate Relationship.
  Role: Personnel class property.
  Relationship Name: Maps to.
  Description: 
    If the person supports the parent personnel class, the personnel class property(s) is applied in this person property(s).
    This person property maps to the corresponding personnel class property.
  """
  mapsTo: PersonnelClassProperty @hasInverse(field: mapsTo)

#  """
#  This testable object property is measured to the test specification containing the evaluated property.
#  """
#  correspondsToTestEvaluatedProperty: EvaluatedProperty

#  """
#  This PersonnelClassProperty records the measurement result for these PropertyMeasurement(s)
#  """
#  recordsMeasurementOf: [PropertyMeasurement]
}

# ################################################################################
# Role-based Equipment Model
# ################################################################################
#
# The role-based equipment model shown in Figure 9 contains the information
# about specific equipment, and the classes of equipment.

"""
A representation of a grouping of equipment with similar characteristics for a definite purpose such 
as manufacturing operations definition, scheduling, capability and performance shall be presented as 
an equipment class. Any piece of equipment may be a member of zero or more equipment classes. An 
equipment class may be defined as a derived class specialization of zero or more base equipment classes. 
An equipment class may be made up of zero or more equipment classes.

An equipment class may be tested by the evaluation of the test specification criteria in the test 
specification that references the evaluated property and may be recorded in an evaluated criterion 
result attribute in the test result.
"""
type EquipmentClass @withSubscription @key(fields: "iid")
@auth(
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  query: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryEquipmentClass @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
    {rule: """ query{ queryEquipmentClass (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  add: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryEquipmentClass @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
    {rule: """ query{ queryEquipmentClass (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  delete: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryEquipmentClass @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
    {rule: """ query{ queryEquipmentClass (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
){
  """ Unique internal database identifier. """
  iid: ID!
  acl:[AccessPermission]
  """ 
  A unique identification of a specific equipment class, within the scope of the information exchanged 
  (operations capability, operations schedule, operations performance, …). The ID is used in other parts 
  of the model when the equipment class needs to be identified, such as the production capability for 
  this equipment class, or an operations response identifying the equipment class used.
  """
  id: String! @search(by: [fulltext, exact])

  """
  link to all available versions for this EquipmentClass
  """
  versions: [EquipmentClassVersion] @hasInverse(field: equipmentClass)
  """
  the currently active version
  """
  activeVersion:EquipmentClassVersion @hasInverse(field:isActiveVersionOf)

  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])

  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope

  """ The equipment class(s) being derived from this base equipment class(s). """
  includedIn: [EquipmentClassVersion] @hasInverse(field: includesPropertiesOf)

  """ This parent equipment class is whole of the child equipment class(s) as the part. """
  children: [EquipmentClass] @hasInverse(field: parent)

  """ The parent equipment class is whole of this child equipment class(s) as the part. """
  parent: EquipmentClass @hasInverse(field: children)

  """ The equipment objects support the equipment class property(s) associated with this equipment class. """
  equipment: [EquipmentVersion] @hasInverse(field: equipmentClass)

  """ The equipment specifications this equipment class is associated with. """
  equipmentSpecifications: [EquipmentSpecification] @hasInverse(field: equipmentClass)

  """ The equipment requirements this equipment class is associated with. """
  equipmentRequirements: [EquipmentRequirement] @hasInverse(field: equipmentClass)

  """ The equipment actual this equipment class is associated with. """
  equipmentActual: [EquipmentActual] @hasInverse(field: equipmentClass)

  """ The icon for the menu in the libre admin UI menu. """
  image: String

  """ The label is last node in the fully qualified name. """
  label: String @search(by: [hash])

  """ The display name in the libre admin UI menu. """
  displayName: String @search(by: [hash])

  """ The ID of this testable object ID(s) evaluated by the test specification. """
  testedBy: [TestSpecification]

  """ The test specification(s) used to evaluate this testable object. """
  specifiesTests: [TestSpecification]

  """
  The test result records the evaluated criterion result attribute and property measurement for 
  this testable object.
  """
  testResults: [TestResult]
}


"""
A representation of a grouping of equipment with similar characteristics for a definite purpose such
as manufacturing operations definition, scheduling, capability and performance shall be presented as
an equipment class. Any piece of equipment may be a member of zero or more equipment classes. An
equipment class may be defined as a derived class specialization of zero or more base equipment classes.
An equipment class may be made up of zero or more equipment classes.

An equipment class may be tested by the evaluation of the test specification criteria in the test
specification that references the evaluated property and may be recorded in an evaluated criterion
result attribute in the test result.
"""
type EquipmentClassVersion @withSubscription @primaryKey(fields:["id","version"]) @key(fields: "iid"){
  """ Unique internal database identifier. """
  iid: ID!
  """
  A unique identification of a specific equipment class, within the scope of the information exchanged
  (operations capability, operations schedule, operations performance, …). The ID is used in other parts
  of the model when the equipment class needs to be identified, such as the production capability for
  this equipment class, or an operations response identifying the equipment class used.
  """
  id: String! @search(by: [fulltext, exact])

  """
  Entity to define the specific version of the entity. Purposely free for to allow use with a specific
  revision scheme. For example `1`, `2` or `Rev A03`, `Rev B01`. Versions are lexicographically compared.
  """
  version: String! @search(by: [fulltext, exact])
  versionStatus:VersionState! @search
  equipmentClass:EquipmentClass! @hasInverse(field: versions)
  isActiveVersionOf:EquipmentClass @hasInverse(field:activeVersion)
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime!
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime

  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])

  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  """ Additional information about the equipment class. """
  description: String @search(by: [fulltext, exact])

  """ An identification of the level in the role-based equipment hierarchy. """
  equipmentLevel: EquipmentElementLevel

  """ The derived equipment class includes the properties of the base equipment class(s). """
  includesPropertiesOf: [EquipmentClass] @hasInverse(field: includedIn)


  """ The equipment class property(s) of this equipment class. """
  properties: [EquipmentClassProperty] @hasInverse(field: equipmentClass)

}

"""
Properties of an equipment class shall be presented as equipment class properties. Each may have zero 
or more recognized properties.

An equipment class property may be tested to the evaluated property in a test specification where the 
measured results may be recorded in a property measurement attribute in a test result. The measured 
results may also be evaluated to the test specification criteria in the test specification that references 
the evaluated property where they may be recorded in an evaluated criterion result attribute in the 
test result. Equipment class properties may contain nested equipment class properties.
"""
type EquipmentClassProperty @withSubscription @key(fields: "iid")
@auth(
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  query: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryEquipmentClassProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
    {rule: """ query{ queryEquipmentClassProperty(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  add: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryEquipmentClassProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
    {rule: """ query{ queryEquipmentClassProperty(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  delete: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryEquipmentClassProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
    {rule: """ query{ queryEquipmentClassProperty (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
){
  """ Unique internal database identifier. """
  iid: ID!
  acl:[AccessPermission]
  """ An identification of the specific property. """
  id: String! @id @search(by: [fulltext, exact])

  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime!

  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime

  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])

  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  """ Additional information about the equipment class property. """
  description: String @search(by: [fulltext, exact])

  """ Defines the type of the property. """
  propertyType: Isa95PropertyType!

  """ The value, set of values, or range of the property. """
  value: String @search(by: [fulltext, exact])

  """ The unit of measure of the associated property value. """
  valueUnitOfMeasure: UnitOfMeasure

  """ The equipment class defined in part by this equipment class property. """
  equipmentClass: EquipmentClassVersion @hasInverse(field: properties)

  """ The nested equipment class property(s) makes up part of this equipment class property as the whole. """
  children: [EquipmentClassProperty] @hasInverse(field: parent)

  """ The equipment class property that this nested equipment class property makes up part of as the whole. """
  parent: EquipmentClassProperty @hasInverse(field: children)

  """
  If the parent equipment supports a equipment class, this equipment class property(s) is applied in the 
  equipment property(s). The equipment property maps to this corresponding equipment class property.
  """
  mapsToEquipmentProperty: EquipmentProperty @hasInverse(field: mapsToEquipmentClassProperty)

  # Still need to add "evaluated property" stuff after implemented
}


"""
A representation of the elements of the equipment hierarchy model shown in ISA 95.00.01 shall be presented
as equipment. Equipment may be a listing of any of the following: enterprise, site, area, work center, work
unit, process cell, unit, production line, production unit, work cell, storage zone, and storage unit.

Equipment may be tested by the execution of the test specification criteria in the test specification
that references the evaluated property and may be recorded in an evaluated criterion result attribute
in the test result.

Equipment may be made up of other equipment, as presented in the equipment hierarchy model.
"""
type Equipment @withSubscription @key(fields: "iid")
@auth(
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  query: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryEquipment @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
    {rule: """ query{ queryEquipment(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  add: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryEquipment @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
    {rule: """ query{ queryEquipment(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  delete: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryEquipment @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
    {rule: """ query{ queryEquipment(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
){
  """ Unique internal database identifier. """
  iid: ID!
  acl:[AccessPermission]
  """
  A unique identification of a specific piece of equipment, within the scope of the information exchanged
  (manufacturing operations definition, scheduling, capability and performance). The equipment ID is used
  in other parts of the model when the equipment needs to be identified, such as the operations capability
  for a piece of equipment, or an operations response identifying the equipment used.
  """
  id: String! @search(by: [fulltext, exact])

  versions:[EquipmentVersion] @hasInverse(field: equipment)
  activeVersion:EquipmentVersion @hasInverse(field:isActiveVersionOf)


  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])

  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope @hasInverse(field: equipment)


  """ This parent equipment is whole of the child equipment(s) as the part. """
  children: [Equipment] @hasInverse(field: parent)

  """ The parent equipment is whole of this child equipment(s) as the part. """
  parent: Equipment @hasInverse(field: children)

  """
  The equipment asset mapping records the uses of the equipment that is associated with the physical
  asset if the equipment associated with a manufacturing function.
  """
  equipmentAssetMapping: [EquipmentAssetMapping]

  """ This equipment as role in a process segment is implemented by the physical asset. """
  physicalAsset: PhysicalAsset @hasInverse(field: implementedBy)

  """ The equipment specification(s) this equipment is associated with. """
  equipmentSpecifications: [EquipmentSpecification] @hasInverse(field: equipment)

  """ The equipment requirement(s) this equipment is associated with. """
  equipmentRequirements: [EquipmentRequirement] @hasInverse(field: equipment)

  """ The equipment actual(s) this equipment is associated with. """
  equipmentActual: [EquipmentActual] @hasInverse(field: equipment)

  """ The job response(s) this equipment is associated with. """
  jobResponses: [JobResponse] @hasInverse(field: equipment)


  """
  Reference to ISA88.00.04 Event. An event is a discrete occurrence in time. Event objects document
  occurrences and can be stored in a batch production record. This is usually done when an event has
  meaning or significance to the manufacture of a product.
  """
  events: [Event] @hasInverse(field: equipment)

  """ Identifies any material sublot(s) stored at this Equipment. """
  materialSubLots: [MaterialSubLot] @hasInverse(field: storageLocationEquipment)

  """ Identifies any material lot(s) stored at this Equipment. """
  materialLots: [MaterialLot] @hasInverse(field: storageLocationEquipment)

  """ The ID of this testable object ID(s) evaluated by the test specification. """
  testedBy: [TestSpecification]

  """ The test specification(s) used to evaluate this testable object. """
  specifiesTests: [TestSpecification]

  """
  The test result records the evaluated criterion result attribute and property measurement for
  this testable object.
  """
  testResults: [TestResult]
}


"""
A representation of a version of the elements of the equipment hierarchy model shown in ISA 95.00.01 shall be presented
as equipment. Equipment may be a listing of any of the following: enterprise, site, area, work center, work
unit, process cell, unit, production line, production unit, work cell, storage zone, and storage unit.

Equipment may be tested by the execution of the test specification criteria in the test specification
that references the evaluated property and may be recorded in an evaluated criterion result attribute
in the test result.

Equipment may be made up of other equipment, as presented in the equipment hierarchy model.
"""
type EquipmentVersion @withSubscription @primaryKey(fields:["id","version"]) @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!
  acl:[AccessPermission]
  """
  A unique identification of a specific piece of equipment, within the scope of the information exchanged
  (manufacturing operations definition, scheduling, capability and performance). The equipment ID is used
  in other parts of the model when the equipment needs to be identified, such as the operations capability
  for a piece of equipment, or an operations response identifying the equipment used.
  """
  id: String! @search(by: [fulltext, exact])

  """
  Entity to define the specific version of the entity. Purposely free for to allow use with a specific
  revision scheme. For example `1`, `2` or `Rev A03`, `Rev B01`. Versions are lexicographically compared.
  """
  version: String! @search(by: [fulltext, exact])
  versionStatus:VersionState! @search
  equipment:Equipment! @hasInverse(field: versions)
  isActiveVersionOf:Equipment @hasInverse(field:activeVersion)
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime!

  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime

  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])

  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  """ Additional information about the equipment. """
  description: String @search(by: [fulltext, exact])


  """ This equipment supports the equipment class property(s) associated with the equipment class. """
  equipmentClass: [EquipmentClass] @hasInverse(field: equipment)

  """ The equipment property values of this equipment. """
  properties: [EquipmentProperty] @hasInverse(field: equipment)

  """ The definition of working time for this equipment. """
  workCalendar: WorkCalendar @hasInverse(field: equipment)

  """ The label is last node in the fully qualified name. """
  label: String @search(by: [hash])

  """ The display name in the libre admin UI menu. """
  displayName: String @search(by: [hash])

  """ An identification of the level in the role-based equipment hierarchy. """
  equipmentLevel: EquipmentElementLevel

  """
  Spatially defines the equipment as a zero-dimensional point, one-dimensional line, or two-dimensional
  shape or three-dimensional solid.
  """
  spatialDefinition: SpatialDefinition

  """ Identifies the operational location of the equipment. """
  operationalLocation: OperationalLocation

  """ Overrides of inherited properties on this equipment instance. """
  propertyOverrides: [EquipmentPropertyOverride] @hasInverse(field: equipment)

  """ The time zone this equipment is located in. """
  timeZoneName: String

}


"""
Properties of equipment shall be presented as equipment properties. An equipment shall have zero or 
more equipment properties. These specify the current property values of the equipment for the associated 
equipment class property.

Equipment properties may include a unit of measure.

An equipment property may be tested to the evaluated property in a test specification where the measured 
results may be recorded in a property measurement attribute in a test result. The measured results may 
also be evaluated to the test specification criteria in the test specification that references the 
evaluated property where they may be recorded in an evaluated criterion result attribute in the test 
result. Equipment property(s) may contain nested equipment properties.
"""
type EquipmentProperty @withSubscription @key(fields: "iid")
@auth(
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  query: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryEquipmentProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
    {rule: """ query{ queryEquipmentProperty(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  add: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryEquipmentProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
    {rule: """ query{ queryEquipmentProperty(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  delete: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryEquipmentProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
    {rule: """ query{ queryEquipmentProperty(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
) {
  """ Unique internal database identifier. """
  iid: ID!
  acl:[AccessPermission]
  """ An identification of the specific property. """
  id: String! @id @search(by: [fulltext, exact])

  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime!

  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime

  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])

  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  """ Additional information about the equipment property. """
  description: String @search(by: [fulltext, exact])

  """ The value, set of values, or range of the property. """
  value: String @search(by: [fulltext, exact])

  """ The unit of measure of the associated property value. """
  valueUnitOfMeasure: UnitOfMeasure

  """ These equipment property values in part for the equipment. """
  equipment: EquipmentVersion @hasInverse(field: properties)

  """ The nested equipment property(s) makes up part of this equipment property as the whole. """
  children: [EquipmentProperty] @hasInverse(field: parent)

  """ The equipment property that this nested equipment property makes up part of as the whole. """
  parent: EquipmentProperty @hasInverse(field: children)

  """
  If the parent equipment supports an equipment class, the equipment class property(s) is applied in this 
  equipment property(s). This equipment property maps to the corresponding equipment class property.
  """
  mapsToEquipmentClassProperty: EquipmentClassProperty @hasInverse(field: mapsToEquipmentProperty)

  """ Overrides of inherited properties on the instance. """  
  propertyOverrides: [EquipmentPropertyOverride] @hasInverse(field: property)

  # Still need to add "evaluated property" stuff after implemented
}


""" Allows inherited property to be overridden on the instance. """
type EquipmentPropertyOverride @withSubscription @key(fields:"id"){
  """ Unique internal database identifier. """
  iid: ID!
  acl:[AccessPermission]
  """ An identification of the specific property. """
  id: String! @id @search(by: [fulltext, exact])

  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime!

  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime

  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])

  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  """ The equipment thats property is being overriden. """
  equipment: EquipmentVersion! @hasInverse(field: propertyOverrides)

  """ The property to override the preexisting property with. """
  property: EquipmentProperty! @hasInverse(field: propertyOverrides) 
  
  """ The data source reference for a bound property type. """
  address: String

  """ Used for calculated property types. """
  expression: String

  """ Used for static property types. """
  value: String

  """ Determines if changes to values should be stored over time. """
  storeHistory: Boolean

  """ Determines if this property is not relevent on the instance. """
  ignore: Boolean @search
}

# ################################################################################
# Physical Asset domain Entities
# ################################################################################
# The physical asset model contains information about the physical piece of equipment,
# usually managed as a physical asset within the enterprise often utilizing a
# specific serial number.
# An object in the equipment model defines a role for the equipment, and object
# in the physical asset model defines the physical asset ID and properties of a
# piece of equipment.

"""
A representation of a grouping of physical assets with similar characteristics for purposes of repair
and replacement shall be presented as a physical asset class. Any physical asset shall be a member of
one physical asset class. A physical asset class may be defined as a derived class specialization of
zero or more base physical asset classes. A physical asset class may be made up of zero or more physical
asset classes.

A physical asset class may be tested by evaluating the test specification criteria in the test specification
that references the evaluated property and may be recorded in an evaluated criterion result attribute in
the test result.
"""
type PhysicalAssetClass @withSubscription @key(fields: "iid")
@auth(
    # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
    query: { or:[
        {rule: """ query($realm_access_roles:[String!]){ queryPhysicalAssetClass @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
        {rule: """ query{ queryPhysicalAssetClass (filter:{not:{has:acl}}){ iid }}"""},
        {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
    ]}
    # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
    add: { or:[
        {rule: """ query($realm_access_roles:[String!]){ queryPhysicalAssetClass @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
        {rule: """ query{ queryPhysicalAssetClass (filter:{not:{has:acl}}){ iid }}"""},
        {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
    ]}
    # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
    delete: { or:[
        {rule: """ query($realm_access_roles:[String!]){ queryPhysicalAssetClass @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
        {rule: """ query{ queryPhysicalAssetClass (filter:{not:{has:acl}}){ iid }}"""},
        {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
    ]}
){
    """ Unique internal database identifier. """
    iid: ID!
    acl:[AccessPermission]

    """ The manufacture's identification of the specific physical asset class. """
    id: String! @id @search(by: [fulltext, exact])

    """
    link to all available versions for this EquipmentClass
    """
    versions: [PhysicalAssetClassVersion] @hasInverse(field: physicalAssetClass)
    """
    the currently active version
    """
    activeVersion:PhysicalAssetClassVersion @hasInverse(field:isActiveVersionOf)

    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default(
        add: { value: "$now" }
    )

    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default(
        add: { value: "$now" }
        update: { value: "$now" }
    )

    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])

    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope!

    """ The physical asset class(s) including the properties of this base physical asset class. """
    includedIn: [PhysicalAssetClassVersion] @hasInverse(field: includesPropertiesOf)

    """ This parent physical asset class is whole of the child physical asset class(s) as the part. """
    children: [PhysicalAssetClass] @hasInverse(field: parent)

    """ The parent material class is whole of this child physical asset class as the part. """
    parent: PhysicalAssetClass @hasInverse(field: children)

    """
    The physical asset objects support this physical asset class. The physical asset objects support the
    physical asset class property(s) associated with this physical asset class.
    """
    defines: [PhysicalAssetVersion] @hasInverse(field: definedBy)

    """ The ID of this testable object ID(s) evaluated by the test specification. """
    testedBy: [TestSpecification] @hasInverse(field: requiredByPhysicalAssetClass)

    """ The test specification(s) used to evaluate this testable object. """
    specifiesTests: [TestSpecification] @hasInverse(field: testsPhysicalAssetClass)

    """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
    testResults: [TestResult] @hasInverse(field: physicalAssetClass)
}

"""
A representation of a grouping of physical assets with similar characteristics for purposes of repair
and replacement shall be presented as a physical asset class. Any physical asset shall be a member of
one physical asset class. A physical asset class may be defined as a derived class specialization of
zero or more base physical asset classes. A physical asset class may be made up of zero or more physical
asset classes.

A physical asset class may be tested by evaluating the test specification criteria in the test specification
that references the evaluated property and may be recorded in an evaluated criterion result attribute in
the test result.
"""
type PhysicalAssetClassVersion @withSubscription @primaryKey(fields:["id","version"]) @key(fields: "iid") {
    """ Unique internal database identifier. """
    iid: ID!

    """ The manufacture's identification of the specific physical asset class. """
    id: String! @search(by: [fulltext, exact])

    """
    Entity to define the specific version of the entity. Purposely free for to allow use with a specific
    revision scheme. For example `1`, `2` or `Rev A03`, `Rev B01`. Versions are lexicographically compared.
    """
    version: String! @search(by: [fulltext, exact])

    physicalAssetClass:PhysicalAssetClass! @hasInverse(field: versions)
    isActiveVersionOf:PhysicalAssetClass @hasInverse(field:activeVersion)

    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime!

    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime

    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default(
        add: { value: "$now" }
    )

    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default(
        add: { value: "$now" }
        update: { value: "$now" }
    )

    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])

    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    """ Additional information about the physical asset class. """
    description: String @search(by: [fulltext, exact])

    """ An identification of the manufacturer. """
    manufacturer: String @search(by: [fulltext, exact])

    """ The derived physical asset class includes the properties of this base physical asset class(s). """
    includesPropertiesOf: [PhysicalAssetClass] @hasInverse(field: includedIn)

    """ The physical asset class property(s) of this physical asset class. """
    properties: [PhysicalAssetClassProperty] @hasInverse(field: physicalAssetClass)

}

"""
Properties of a physical asset class shall be presented as physical asset class properties. Each may 
have zero or more recognized properties.

A physical asset class property may be tested to the evaluated property in a test specification where 
the measured results may be recorded in a property measurement attribute in a test result. The measured 
results may also be evaluated to the test specification criteria in the test specification that references 
the evaluated property where they may be recorded in an evaluated criterion result attribute in the test result.

Physical asset class property(s) may contain nested physical asset class property(s).
"""
type PhysicalAssetClassProperty @withSubscription @key(fields: "iid")
@auth(
    # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
    query: { or:[
        {rule: """ query($realm_access_roles:[String!]){ queryPhysicalAssetClassProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
        {rule: """ query{ queryPhysicalAssetClassProperty (filter:{not:{has:acl}}){ iid }}"""},
        {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
    ]}
    # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
    add: { or:[
        {rule: """ query($realm_access_roles:[String!]){ queryPhysicalAssetClassProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
        {rule: """ query{ queryPhysicalAssetClassProperty (filter:{not:{has:acl}}){ iid }}"""},
        {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
    ]}
    # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
    delete: { or:[
        {rule: """ query($realm_access_roles:[String!]){ queryPhysicalAssetClassProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
        {rule: """ query{ queryPhysicalAssetClassProperty (filter:{not:{has:acl}}){ iid }}"""},
        {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
    ]}
){
    """ Unique internal database identifier. """
    iid: ID!
    acl:[AccessPermission]

    """ An identification of the specific property. """
    id: String! @search(by: [fulltext, exact])

    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime!

    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime

    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default(
        add: { value: "$now" }
    )

    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default(
        add: { value: "$now" }
        update: { value: "$now" }
    )

    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])

    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    """ Additional information about the property. """
    description: String @search(by: [fulltext, exact]) 

    """ Defines the type of the property. """
    propertyType: Isa95PropertyType!

    """
    The value, set of values, or range of the property. The value(s) is assumed to be within the range 
    or set of defined values for the related asset property.
    """
    value: String @search(by: [fulltext, exact]) 

    """ The unit of measure of the associated property value. """
    valueUnitOfMeasure: UnitOfMeasure

    """ These physical asset class property values in part define the physical asset class. """
    physicalAssetClass: PhysicalAssetClassVersion! @hasInverse(field: properties)

    """ The nested physical asset class property(s) makes up part of this physical asset class property as the whole. """
    children: [PhysicalAssetClassProperty] @hasInverse(field: parent)

    """ The physical asset class property that this nested physical asset class property makes up part of as the whole. """
    parent: PhysicalAssetClassProperty @hasInverse(field: children)

    """
    If the parent physical asset supports a physical asset class, this physical asset class property(s) is 
    applied to the physical asset property(s). The physical asset property maps to the corresponding this 
    physical asset class property.
    """
    mapsTo: PhysicalAssetProperty @hasInverse(field: mapsTo)

    """ This testable object property is measured to the test specification containing the evaluated property. """
    correspondsTo: [EvaluatedProperty] @hasInverse(field: physicalAssetClassProperty)

    """ The property measurement records the measurement result for this testable object property. """
    recordsMeasurementOf: [PropertyMeasurement] @hasInverse(field: physicalAssetClassProperty)
}

"""
A physical piece of equipment shall be presented as a physical asset.

A physical asset may be tested by the evaluation of the test specification criteria in the test specification
that references the evaluated property and may be recorded in an evaluated criterion result attribute
in the test result.

Physical assets may be made up of other physical assets.

Example: A packaging line can be made up of conveyor sections, motors and sensors.
"""
type PhysicalAsset @withSubscription @key(fields: "iid")
@auth(
    # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
    query: { or:[
        {rule: """ query($realm_access_roles:[String!]){ queryPhysicalAsset @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
        {rule: """ query{ queryPhysicalAsset (filter:{not:{has:acl}}){ iid }}"""},
        {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
    ]}
    # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
    add: { or:[
        {rule: """ query($realm_access_roles:[String!]){ queryPhysicalAsset @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
        {rule: """ query{ queryPhysicalAsset (filter:{not:{has:acl}}){ iid }}"""},
        {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
    ]}
    # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
    delete: { or:[
        {rule: """ query($realm_access_roles:[String!]){ queryPhysicalAsset @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
        {rule: """ query{ queryPhysicalAsset (filter:{not:{has:acl}}){ iid }}"""},
        {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
    ]}
){
    """ Unique internal database identifier. """
    iid: ID!
    acl:[AccessPermission]

    """ Defines a unique identification of a physical asset. """
    id: String! @id @search(by: [fulltext, exact])

    """
    link to all available versions for this EquipmentClass
    """
    versions: [PhysicalAssetVersion] @hasInverse(field: physicalAsset)
    """
    the currently active version
    """
    activeVersion:PhysicalAssetVersion @hasInverse(field:isActiveVersionOf)

    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default(
        add: { value: "$now" }
    )

    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default(
        add: { value: "$now" }
        update: { value: "$now" }
    )

    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])

    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope

    """ Contains a unique identification for financial tracking as required by laws or regulations. """
    fixedAssetID: String @search(by: [fulltext, exact])

    """ Contains a vendor's serial number. """
    vendorID: String @search(by: [fulltext, exact])

    """
    Spatially defines the physical asset as a zero-dimensional point, one-dimensional line, or
    two-dimensional shape or three dimensional solid.
    """
    spatialDefinition: SpatialDefinition

    """ Identifies the physical location of the physical asset. """
    physicalLocation: OperationalLocation

    """ Identifies the physical location of the physical asset. """
    physicalLocationDescription: String @search(by: [fulltext, exact])

    """ The related object(s) makes up this physical asset as the whole. """
    children: [PhysicalAsset] @hasInverse(field: parent)

    """ This Physical Asset makes up part of the parent Physical Asset. """
    parent: PhysicalAsset @hasInverse(field: children)

    """
    The equipment asset mapping records the uses of the physical asset that is associated with the equipment
    if the physical asset associated with a manufacturing function.
    """
    recordUseOf: [EquipmentAssetMapping] @hasInverse(field: physicalAsset)

    """ This equipment as role in a process segment is implemented by the physical asset. """
    implementedBy: Equipment @hasInverse(field: physicalAsset)

    """ Identifies any material lot(s) stored at this physical asset. """
    materialLots: [MaterialLot] @hasInverse(field: storageLocationPhysicalAsset)

    """
    Identifies any material sublot(s) stored at this physical asset.
    """
    materialSubLots: [MaterialSubLot] @hasInverse(field: storageLocationPhysicalAsset)

    """ The ID of this testable object ID(s) evaluated by the test specification. """
    testedBy: [TestSpecification] @hasInverse(field: requiredByPhysicalAsset)

    """ The test specification(s) used to evaluate this testable object. """
    specifiesTests: [TestSpecification] @hasInverse(field: testsPhysicalAsset)

    """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
    testResults: [TestResult] @hasInverse(field: physicalAsset)
}


"""
A physical piece of equipment shall be presented as a physical asset.

A physical asset may be tested by the evaluation of the test specification criteria in the test specification
that references the evaluated property and may be recorded in an evaluated criterion result attribute
in the test result.

Physical assets may be made up of other physical assets.

Example: A packaging line can be made up of conveyor sections, motors and sensors.
"""
type PhysicalAssetVersion @withSubscription @primaryKey(fields:["id","version"]) @key(fields: "iid") {
    """ Unique internal database identifier. """
    iid: ID!

    """ Defines a unique identification of a physical asset. """
    id: String! @search(by: [fulltext, exact])

    """
    Entity to define the specific version of the entity. Purposely free for to allow use with a specific
    revision scheme. For example `1`, `2` or `Rev A03`, `Rev B01`. Versions are lexicographically compared.
    """
    version: String! @search(by: [fulltext, exact])

    physicalAsset:PhysicalAsset! @hasInverse(field: versions)
    isActiveVersionOf:PhysicalAsset @hasInverse(field:activeVersion)

    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime!

    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime

    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default(
        add: { value: "$now" }
    )

    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default(
        add: { value: "$now" }
        update: { value: "$now" }
    )

    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])

    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    """ Contains additional information and descriptions of the physical asset. """
    description: String @search(by: [fulltext, exact])

    """ Contains a unique identification for financial tracking as required by laws or regulations. """
    fixedAssetID: String @search(by: [fulltext, exact])

    """ Contains a vendor's serial number. """
    vendorID: String @search(by: [fulltext, exact])

    """
    Physical Asset Classes supported by this physical asset. This physical asset supports the physical
    asset class property(s) associated with the physical asset class.
    """
    definedBy: [PhysicalAssetClass] @hasInverse(field: defines)

    """ The physical asset properties values of this physical asset. """
    properties: [PhysicalAssetProperty] @hasInverse(field: physicalAsset)

}


"""
Properties of physical assets shall be presented as physical asset properties. A physical asset shall 
have zero or more physical asset properties. These specify the current property values of the physical 
asset for the associated physical asset class property. Physical asset properties may include a unit of measure.

A physical asset property may be tested to the evaluated property in a test specification where the 
measured results may be recorded in a property measurement attribute in a test result. The measured 
results may also be evaluated to the test specification criteria in the test specification that references 
the evaluated property where they may be recorded in an evaluated criterion result attribute in the test result.

Physical asset property(s) may contain nested physical asset property(s).
"""
type PhysicalAssetProperty @withSubscription @key(fields: "iid")
@auth(
    # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
    query: { or:[
        {rule: """ query($realm_access_roles:[String!]){ queryPhysicalAssetProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
        {rule: """ query{ queryPhysicalAssetProperty (filter:{not:{has:acl}}){ iid }}"""},
        {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
    ]}
    # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
    add: { or:[
        {rule: """ query($realm_access_roles:[String!]){ queryPhysicalAssetProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
        {rule: """ query{ queryPhysicalAssetProperty (filter:{not:{has:acl}}){ iid }}"""},
        {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
    ]}
    # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
    delete: { or:[
        {rule: """ query($realm_access_roles:[String!]){ queryPhysicalAssetProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
        {rule: """ query{ queryPhysicalAssetProperty (filter:{not:{has:acl}}){ iid }}"""},
        {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
    ]}
){
    """ Unique internal database identifier. """
    iid: ID!
    acl:[AccessPermission]

    """ An identification of the specific property. """
    id: String! @id @search(by: [fulltext, exact])

    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime!

    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime

    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default(
        add: { value: "$now" }
    )

    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default(
        add: { value: "$now" }
        update: { value: "$now" }
    )

    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])

    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    """ Additional information about the asset property. """
    description: String @search(by: [fulltext, exact]) 

    """
    The value, set of values, or range of the property. The value(s) is assumed to be within the range 
    or set of defined values for the related asset property.
    """
    value: String @search(by: [fulltext, exact]) 

    """ The unit of measure of the associated property value. """
    valueUnitOfMeasure: UnitOfMeasure

    """ These physical asset property values in part for the physical asset. """
    physicalAsset: PhysicalAssetVersion! @hasInverse(field: properties)

    """ The nested physical asset property(s) makes up part of this physical asset property as the whole. """
    children: [PhysicalAssetProperty] @hasInverse(field: parent)

    """ The nested physical asset property(s) makes up part of this physical asset property as the whole. """
    parent: PhysicalAssetProperty @hasInverse(field: children)

    """
    If the parent physical asset supports a physical asset class, the physical asset class property(s) is 
    applied in this physical asset property(s). This physical asset property maps to the corresponding 
    physical asset class property.
    """
    mapsTo: [PhysicalAssetClassProperty] @hasInverse(field: mapsTo)

    """ This testable object property is measured to the test specification containing the evaluated property. """
    correspondsTo: [EvaluatedProperty] @hasInverse(field: physicalAssetProperty)

    """ The property measurement records the measurement result for this testable object property. """
    recordsMeasurementOf: [PropertyMeasurement] @hasInverse(field: physicalAssetProperty)
}


"""
The relationship between a physical asset and an equipment shall be presented as an equipment asset 
mapping. The equipment asset mapping records the time period when one equipment object and one physical 
asset object were associated.
"""
type EquipmentAssetMapping @withSubscription @key(fields: "iid") {
    """ Unique internal database identifier. """
    iid: ID!

    """ An identification of the specific equipment asset mapping. """
    id: String! @id @search(by: [fulltext, exact])

    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime!

    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime

    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default(
        add: { value: "$now" }
    )

    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default(
        add: { value: "$now" }
        update: { value: "$now" }
    )

    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])

    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    """ Additional information about the mapping element. """
    description: String @search(by: [fulltext, exact]) 

    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope

    """ The starting time of the association. """
    startTime: DateTime

    """ The ending time of the association. """
    endTime: DateTime

    """
    The physical asset that is associated with the equipment if the physical asset associated with a 
    manufacturing function.
    """
    physicalAsset: PhysicalAsset! @hasInverse(field: recordUseOf)

    """ The equipment performing the manufacturing function. """
    equipment: Equipment! @hasInverse(field: equipmentAssetMapping)
}
# ################################################################################
# Material Information Model
# ################################################################################
#
# The material model shown in Figure 12 defines the actual materials,
# material definitions , and information about classes of material definitions.
# Material information includes the inventory of raw, finished, intermediate materials,
# and consumables.
# The information about planned or actual material is contained in the
# material lot and material sublot information.
# Material classes are defined to organize materials.

"""
A representation of groupings of material definitions for a definite purpose such as
manufacturing operations definition, scheduling, capability, and performance shall be
presented as a material class. A material definition shall belong to zero or more material classes.

A material class may be defined as a derived class specialization of zero or more base material
classes. A material class may be made up of zero or more material classes. A material class may
be defined as follows by containing an assembly of material classes and as part of an assembly
of material classes.
  a) A material class may define an assembly of zero or more material classes.
  b) A material class may be an assembly element of zero or more material classes.
  c) An assembly may be defined as a permanent or transient assembly of material classes.
  d) An assembly may be defined as physical or a logical assembly of material classes.

A material class may be tested by the evaluation of the test specification criteria in the test
specification that references the evaluated property and may be recorded in an evaluated criterion
result attribute in the test result.
"""
type MaterialClass @withSubscription @key(fields: "iid") @auth(
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  query: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMaterialClass @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
    {rule: """ query{ queryMaterialClass(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  add: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMaterialClass @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
    {rule: """ query{ queryMaterialClass(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  delete: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMaterialClass @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
    {rule: """ query{ queryMaterialClass(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
){
  """ Unique internal database identifier. """
  iid: ID!
  acl:[AccessPermission]

  """
  A unique identification of a specific material class, within the scope of the information exchanged
  (operations capability, operations schedule, operations performance, …).
  The ID is used in other parts of the model when the material class needs to be identified, such as the
  operations capability for this material class, or an operations response identifying the material class used.
  """
  id: String! @id @search(by: [fulltext, exact])


  """
  link to all available versions for this EquipmentClass
  """
  versions: [MaterialClassVersion] @hasInverse(field: materialClass)
  """
  the currently active version
  """
  activeVersion:MaterialClassVersion @hasInverse(field:isActiveVersionOf)

  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])

  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope @hasInverse(field: materialClasses)

  """ The material class(s) being derived from this base material class(s). """
  includedIn: [MaterialClassVersion] @hasInverse(field: includesPropertiesOf)

  """
  This parent material class is whole of the child material class(s) as the part.
  A material class of car could be assembled from material class wheel.
  """
  isAssembledFrom: [MaterialClass] @hasInverse(field: isComponentOf)

  """ The parent material class is whole of this child material class as the part. """
  isComponentOf: MaterialClass @hasInverse(field: isAssembledFrom)

  """
  The material definition objects support the material class property(s) associated with this
  material class.
  """
  materialDefinitions: [MaterialDefinitionVersion] @hasInverse(field: materialClass)

  """ The set of material requirements that are linked to this material class. """
  materialRequirements: [MaterialRequirement] @hasInverse(field: materialClass)

  """ The material actuals this material class is associated with. """
  materialActual: [MaterialActual] @hasInverse(field: materialClass)

  """ The material specifications this material definition is associated with. """
  workSpecifications: [MaterialSpecification] @hasInverse(field: materialClass)

  """ The ID of this testable object ID(s) evaluated by the test specification. """
  testedBy: [TestSpecification]

  """ The test specification(s) used to evaluate this testable object. """
  specifiesTests: [TestSpecification]

  """
  The test result records the evaluated criterion result attribute and property measurement for
  this testable object.
  """
  testResults: [TestResult]
}


"""
A representation of groupings of material definitions for a definite purpose such as
manufacturing operations definition, scheduling, capability, and performance shall be
presented as a material class. A material definition shall belong to zero or more material classes.

A material class may be defined as a derived class specialization of zero or more base material
classes. A material class may be made up of zero or more material classes. A material class may
be defined as follows by containing an assembly of material classes and as part of an assembly
of material classes.
a) A material class may define an assembly of zero or more material classes.
b) A material class may be an assembly element of zero or more material classes.
c) An assembly may be defined as a permanent or transient assembly of material classes.
d) An assembly may be defined as physical or a logical assembly of material classes.

A material class may be tested by the evaluation of the test specification criteria in the test
specification that references the evaluated property and may be recorded in an evaluated criterion
result attribute in the test result.
"""
type MaterialClassVersion @withSubscription @primaryKey(fields:["id","version"])  @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!

  """
  A unique identification of a specific material class, within the scope of the information exchanged
  (operations capability, operations schedule, operations performance, …).
  The ID is used in other parts of the model when the material class needs to be identified, such as the
  operations capability for this material class, or an operations response identifying the material class used.
  """
  id: String! @search(by: [fulltext, exact])

  """
  Entity to define the specific version of the entity. Purposely free for to allow use with a specific
  revision scheme. For example `1`, `2` or `Rev A03`, `Rev B01`. Versions are lexicographically compared.
  """
  version: String! @search(by: [fulltext, exact])

  materialClass: MaterialClass! @hasInverse(field: versions)
  isActiveVersionOf: MaterialClass @hasInverse(field: activeVersion)


  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime!

  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime

  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])

  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  """ Additional information about the material class. """
  description: String @search(by: [fulltext, exact])

  """
  Defines the type of the assembly.
  Defined types are
  - physical: the components of the assembly are physically connected or in the same area;
  - logical:  the components of the assembly are not necessarily physically connected or
  in the same area.
  """
  assemblyType: AssemblyType @search(by: [exact])

  """
  Defines the type of the relationships.
  Defined types are
  - permanent: an assembly that is not intended to be split during the production process;
  - transient: a temporary assembly using during production, such as a pallet of different
  materials or a batch kit.
  """
  assemblyRelationship: AssemblyRelationship @search(by: [exact])

  """
  The derived material class(s) include properties of this base material class(s).
  A material class of car would be a specialization of class vehicle.
  """
  includesPropertiesOf: [MaterialClass] @hasInverse(field: includedIn)


  """ The material class property(s) of this material class. """
  properties: [MaterialClassProperty] @hasInverse(field: materialClass)

}

"""
Properties of a material class shall be presented as material class properties. A material 
class may define zero or more material class properties.

A material class property may be tested to the evaluated property in a test specification where 
the measured results may be recorded in a property measurement attribute in a test result. The 
measured results may also be evaluated to the test specification criteria in the test specification 
that references the evaluated property where they may be recorded in an evaluated criterion result 
attribute in the test result. 

Material class property(s) may contain nested material class property(s).

The material class properties often list the nominal or standard values for the material. A material 
property value does not have to match the value of the corresponding material class property.
"""
type MaterialClassProperty @withSubscription @key(fields: "iid") @auth(
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  query: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMaterialClassProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
    {rule: """ query{ queryMaterialClassProperty(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  add: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMaterialClassProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
    {rule: """ query{ queryMaterialClassProperty(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  delete: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMaterialClassProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
    {rule: """ query{ queryMaterialClassProperty(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
){
  """ Unique internal database identifier. """
  iid: ID!
  acl:[AccessPermission]

  """ An identification of a specific material class property. """
  id: String! @id @search(by: [fulltext, exact])

  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime!

  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime

  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])

  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  """ Additional information about the material class property. """
  description: String @search(by: [fulltext, exact]) 

  """
  Defines the type of the property. 
  Defined types are
    class type: the property value is defined for the class and there is no value associated with an instance;
    instance type: the property value of the class is undefined; and 
    default type: the property value is defined for the class as the default instance value, but individual 
      instances of the class may redefine specific values. 
  """
  propertyType: Isa95PropertyType!

  """ The value, set of values, or range of the property. """
  value: String @search(by: [fulltext, exact])

  """ The unit of measure of the associated property value. """
  valueUnitOfMeasure: UnitOfMeasure

  """ The material class defined in part by this material class property. """
  materialClass: MaterialClassVersion! @hasInverse(field: properties)

  """ The nested material class property(s) makes up part of this material class property as the whole. """
  children: [MaterialClassProperty] @hasInverse(field: parent)

  """ The material class property that this nested material class property makes up part of as the whole. """
  parent: MaterialClassProperty @hasInverse(field: children)

  """
  If the parent material definition supports a material class, this material class property(s) is applied 
  in the material definition property(s). 
  The material definition property maps to this corresponding material class property.
  """
  mapsToMaterialDefinitionProperty: [MaterialDefinitionProperty] @hasInverse(field: mapsToMaterialClassProperty)

  """ This testable object property is measured to the test specification containing the evaluated property. """
  correspondsTo: [EvaluatedProperty] @hasInverse(field: materialClassProperty)

  """ The property measurement records the measurement result for this testable object property. """
  recordsMeasurementOf: [PropertyMeasurement] @hasInverse(field: materialClassProperty)
}


"""
A representation of a material with similar characteristics for the purpose of manufacturing operations 
definition, scheduling, capability and performance shall be presented as a material definition.

A material definition may be tested by the evaluation of the test specification criteria in the test 
specification that references the evaluated property and may be recorded in an evaluated criterion 
result attribute in the test result.

Any material lot shall be associated with one material definition.
"""
type MaterialDefinition @withSubscription @key(fields: "iid") @auth(
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  query: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMaterialDefinition @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
    {rule: """ query{ queryMaterialDefinition(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  add: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMaterialDefinition @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
    {rule: """ query{ queryMaterialDefinition(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  delete: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMaterialDefinition @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
    {rule: """ query{ queryMaterialDefinition(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
){
  """ Unique internal database identifier. """
  iid: ID!
  acl:[AccessPermission]

  """
  A unique identification of a specific material definition, within the scope of the information 
  exchanged (operations capability, operations schedule, operations performance, …).
  The ID is used in other parts of the model when the material definition needs to be identified, 
  such as the operations capability for this material definition, or an operations response identifying 
  the material definition used.
  """
  id: String! @search(by: [fulltext, exact])

  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])

  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  """ Identifies where the exchanged information fits within the role-based equipment hierarchy.  """
  hierarchyScope: HierarchyScope @hasInverse(field: materialDefinitions)

  """
  The material lot occurrences that are constructed based on this material definition. The 
  material lot property(s) map to a corresponding material definition property.
  """
  materialLots: [MaterialLot] @hasInverse(field: materialDefinition)

  """ The material requirements this material definition is associated with. """
  materialRequirements: [MaterialRequirement] @hasInverse(field: material)

  """ The material actuals this material definition is associated with. """
  materialActual: [MaterialActual] @hasInverse(field: materialDefinition)

  """ The material specifications this material definition is associated with. """
  workSpecifications: [MaterialSpecification] @hasInverse(field: material)

  """ Material(s) that can be used as an alternate to this material definition. """
  alternates: [MaterialAlternate] @hasInverse(field: materialDefinition)

  """ Default unit of measure for this material definition. """
  baseUnitOfMeasure: UnitOfMeasure


  """ The ID of this testable object ID(s) evaluated by the test specification. """
  testedBy: [TestSpecification]

  """ The test specification(s) used to evaluate this testable object. """
  specifiesTests: [TestSpecification]

  """
  The test result records the evaluated criterion result attribute and property measurement for 
  this testable object.
  """
  testResults: [TestResult]
}


"""
A representation of a material with similar characteristics for the purpose of manufacturing operations
definition, scheduling, capability and performance shall be presented as a material definition.

A material definition may be tested by the evaluation of the test specification criteria in the test
specification that references the evaluated property and may be recorded in an evaluated criterion
result attribute in the test result.

Any material lot shall be associated with one material definition.
"""
type MaterialDefinitionVersion @withSubscription @primaryKey(fields:["id","version"]) @key(fields: "iid"){
  """ Unique internal database identifier. """
  iid: ID!

  """
  A unique identification of a specific material definition, within the scope of the information
  exchanged (operations capability, operations schedule, operations performance, …).
  The ID is used in other parts of the model when the material definition needs to be identified,
  such as the operations capability for this material definition, or an operations response identifying
  the material definition used.
  """
  id: String! @search(by: [fulltext, exact])

  """
  Entity to define the specific version of the entity. Purposely free for to allow use with a specific
  revision scheme. For example `1`, `2` or `Rev A03`, `Rev B01`. Versions are lexicographically compared.
  """
  version: String! @search(by: [fulltext, exact])

  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime!

  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime

  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])

  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  """ A short description of the material definition. """
  name: String @search(by: [fulltext])

  """ Additional information about the material definition. """
  description: String @search(by: [fulltext, exact])


  """
  Spatially defines the material definition as a zero-dimensional point, one-dimensional line, or
  two-dimensional shape or three-dimensional solid.
  """
  spatialDefinition: SpatialDefinition

  """
  Defines the type of the assembly.
  Defined types are
  - physical: the components of the assembly are physically connected or in the same area;
  - logical:  the components of the assembly are not necessarily physically connected or in
  the same area.
  """
  assemblyType: AssemblyType @search(by: [exact])

  """
  Defines the type of the relationships.
  Defined types are
  - permanent: an assembly that is not intended to be split during the production process;
  - transient: a temporary assembly using during production, such as a pallet of different
  materials or a batch kit.
  """
  assemblyRelationship: AssemblyRelationship @search(by: [exact])

  """ This material definition is part of the related object as the whole. """
  isAssembledFrom: [MaterialDefinitionVersion] @hasInverse(field: isComponentOf)

  """ The material definition is part of the related object(s) as the whole. """
  isComponentOf: MaterialDefinitionVersion @hasInverse(field: isAssembledFrom)

  """ The material definition property(s) of this material definition. """
  properties: [MaterialDefinitionProperty] @hasInverse(field: materialDefinition)

  """
  This material definition objects support the material class property(s) associated with the
  material class.
  """
  materialClass: [MaterialClass] @hasInverse(field: materialDefinitions)

  """ List of conversion factors between other units of measure and the base unit of measure. """
  uomConversions: [UnitOfMeasureConversion] @hasInverse(field: materialDefinition)

  """ Not explicitly in the isa95 standard. """
  parameterSpecifications: [ParameterSpecification] @hasInverse(field: material)

}


"""
Properties of a material definition shall be presented as material definition properties. A material 
definition may define zero or more material definition properties.

A material definition property may be tested to the evaluated property in a test specification where 
the measured results may be recorded in a property measurement attribute in a test result. The 
measured results may also be evaluated to the test specification criteria in the test specification 
that references the evaluated property where they may be recorded in an evaluated criterion result 
attribute in the test result.

Material definition property(s) may contain nested material definition property(s).

Properties may present the nominal or standard values for the material.
"""
type MaterialDefinitionProperty @withSubscription @key(fields: "iid") @auth(
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  query: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMaterialDefinitionProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
    {rule: """ query{ queryMaterialDefinitionProperty(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  add: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMaterialDefinitionProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
    {rule: """ query{ queryMaterialDefinitionProperty(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  delete: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMaterialDefinitionProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
    {rule: """ query{ queryMaterialDefinitionProperty(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
) {
  """ Unique internal database identifier. """
  iid: ID!
  acl:[AccessPermission]

  """ An identification of the specific material definition property. """
  id: String! @id @search(by: [fulltext, exact])

  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime!

  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime

  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])

  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  """ Additional information about the material definition property. """
  description: String @search(by: [fulltext, exact])

  """
  Defines the type of the property. 
  Defined types are
    class type: the property value is defined for the class and there is no value associated 
      with an instance;
    instance type: the property value of the class is undefined; and 
    default type; the property value is defined for the class as the default instance value, 
      but individual instances of the class may redefine specific values. 
  """
  propertyType: Isa95PropertyType!

  """ The value, set of values, or range of the property. """
  value: String @search(by: [fulltext, exact])

  """ The unit of measure of the associated property value. """
  valueUnitOfMeasure: UnitOfMeasure

  """ The material definition defined in part by this material definition property. """
  materialDefinition: MaterialDefinitionVersion! @hasInverse(field: properties)

  """
  The nested material definition property(s) makes up part of this material definition property 
  as the whole.
  """
  children: [MaterialDefinitionProperty] @hasInverse(field: parent)

  """
  The material definition property that this nested material definition property makes up part of 
  as the whole.  
  """
  parent: MaterialDefinitionProperty @hasInverse(field: children)

  """
  If the parent material definition supports a material class, the material class property(s) 
  is applied in the material definition property(s). 
  This material definition property maps to the corresponding material class property.  
  """
  mapsToMaterialClassProperty: MaterialClassProperty @hasInverse(field: mapsToMaterialDefinitionProperty)

  """
  If the parent material lot supports a material definition, this material definition property(s) 
  is applied in the material lot property(s). 
  The material lot property maps to this corresponding material definition property.
  """
  mapsToMaterialLotProperty: [MaterialLotProperty] @hasInverse(field: mapsToMaterialDefinitionProperty)

  """ This testable object property is measured to the test specification containing the evaluated property. """
  correspondsTo: [EvaluatedProperty] @hasInverse(field: materialDefinitionProperty)

  """ The property measurement records the measurement result for this testable object property. """
  recordsMeasurementOf: [PropertyMeasurement] @hasInverse(field: materialDefinitionProperty)
}


"""
A uniquely identified specific amount of material, either countable or weighable shall be presented 
as a material lot. A material lot describes the planned or actual total quantity or amount of 
material available, its current state, and its specific property values.

A material lot may be tested by the evaluation of a test specification.

A material lot shall include
  a) the unique identification of the lot;
  b) the amount of material; 
  c) the unit of measure of the material; 
  d) the storage location for the material; and
  e) any status of the lot.

A material lot may be made up of material sublots. Material lots and material sublots may be used 
for traceability when they contain unique identifications.
"""
type MaterialLot @withSubscription @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!

  """
  A unique identification of a specific material lot, within the scope of the information exchanged 
  (operations capability, operations schedule, operations performance, …).
  The ID is used in other parts of the model when the material lot needs to be identified, such as 
  the operations capability for this material lot or an operations response identifying the material 
  lot used.
  """
  id: String! @search(by: [fulltext, exact])

  """
  Entity to define the specific version of the entity. Purposely free for to allow use with a specific 
  revision scheme. For example `1`, `2` or `Rev A03`, `Rev B01`. Versions are lexicographically compared.
  """
  version: String! @search(by: [fulltext, exact])

  """
  A named unique instance of the entity. Note that this attribute is subject to change, based on 
  the implementation timeline of composite keys within dgraph.
  """
  key: String! @id @search(by: [fulltext, exact])

  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime!

  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime

  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])

  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  """ Additional information about the material lot. """
  description: String @search(by: [fulltext, exact])

  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope @hasInverse(field: materialLots)

  """
  Spatially defines the material lot as a zero-dimensional point, one-dimensional line, or 
  two-dimensional shape or three-dimensional solid.
  """
  spatialDefinition: SpatialDefinition

  """ Identifies the operational location storage location of the material lot. """
  storageLocationOperationalLocation: OperationalLocation @hasInverse(field: materialLots)

  """ Identifies the equipment storage location of the material lot. """
  storageLocationEquipment: Equipment @hasInverse(field: materialLots)

  """ Identifies the physical asset storage location of the material lot. """
  storageLocationPhysicalAsset: PhysicalAsset @hasInverse(field: materialLots)

  """ Identifies the storage location description of the material lot. """
  storageLocationDescription: String @search(by: [fulltext, exact])

  """
  Defines the type of the assembly. 
  Defined types are
    - physical: the components of the assembly are physically connected or in the same area;
    - logical:  the components of the assembly are not necessarily physically connected or in 
      the same area.
  """
  assemblyType: AssemblyType @search(by: [exact])

  """
  Defines the type of the relationships.
  Defined types are
    - permanent: an assembly that is not intended to be split during the production process;
    - transient: a temporary assembly using during production, such as a pallet of different 
      materials or a batch kit.
  """
  assemblyRelationship: AssemblyRelationship @search(by: [exact])

  """ Status of the material lot in manufacturing operations. Values defined by implementation. """
  status: String @search(by: [fulltext, exact])

  """
  Planning and logistics disposition of a material lot or assembly of material lots. 
  Defined values for the disposition of a material lot are
    - planned: a material lot that does not yet physically exist, is assigned to an operations 
      request (segment requirement) or work request (Part 4 object) or job order (Part 4 object); 
    - in process: the material lot is in the process of being worked on; 
    - restricted: a material lot is not permitted for normal use due to a restriction condition. 
    - unrestricted: material lot is permitted for normal use without restriction; and
    - closed: material lot has been reconciled as completely consumed, sold or disposed of.
  """
  disposition: Disposition @search(by: [exact])

  """ The quantity of the material lot. """
  quantity: Float

  """ The unit of measure of the associated quantity. """
  quantityUnitOfMeasure: UnitOfMeasure

  """ This child material lot is part of the material lot as the whole. """
  isAssembledFromMaterialLot: [MaterialLot] @hasInverse(field: isComponentOfMaterialLot)

  """ The material lot is part of the related object(s) as the whole. """
  isComponentOfMaterialLot: MaterialLot @hasInverse(field: isAssembledFromMaterialLot)

  """ The material lot property(s) of this material lot. """
  properties: [MaterialLotProperty] @hasInverse(field: materialLot)

  """
  The material definition that defines this material lot.
  This material lot objects support the material definition property(s) associated with the material definition.
  The material lot can act as a container for other objects where it does not have material definition association.
  """
  materialDefinition: MaterialDefinition! @hasInverse(field: materialLots)

  """
  The material lot are constructed based on the material sublot. The material sublot property(s) map 
  to a corresponding material lot property.
  """
  childSubLot: [MaterialSubLot] @hasInverse(field: parentMaterialLot)

  """ The material sublot is part of the material lot as the whole. """
  isAssembledFromMaterialSubLot: [MaterialSubLot] @hasInverse(field: isComponentOfMaterialLot)
  
  """ The material lot makes up part of this material sublot as the whole. """
  isComponentOfMaterialSubLot: MaterialSubLot @hasInverse(field: isAssembledFromMaterialLot)

  """ The material requirements this material lot is associated with. """
  materialRequirements: [MaterialRequirement] @hasInverse(field: materialLots)

  """ The material actuals this material lot is associated with. """
  materialActual: [MaterialActual] @hasInverse(field: materialLot)

  """ The material specifications this material lot is associated with. """
  workSpecifications: [MaterialSpecification] @hasInverse(field: materialLot)

  """ The ID of this testable object ID(s) evaluated by the test specification. """
  testedBy: [TestSpecification]

  """ The test specification(s) used to evaluate this testable object. """
  specifiesTests: [TestSpecification]

  """
  The test result records the evaluated criterion result attribute and property measurement for 
  this testable object.
  """
  testResults: [TestResult]
}


"""
Properties of a material lot shall be presented as material lot properties. Each material can have 
unique values for zero or more material lot properties, such as a specific pH value for the specific 
material lot, or a specific density for the material lot.

A material lot property may be tested to the evaluated property in a test specification where the 
measured results may be recorded in a property measurement attribute in a test result. The measured 
results may be evaluated to the test specification criteria in the test specification that references 
the evaluated property where they may be recorded in an evaluated criterion result attribute in the test result.

Material lot property(s) may contain nested material lot property(s).

A material lot property is associated with either a material lot or a material sublot. When associated 
with a material lot it specifies a property value for all material sublots, when associated with a 
material sublot it specifies a property value for a single material sublot.
"""
type MaterialLotProperty @withSubscription @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!

  """ An identification of the specific material lot property. """
  id: String! @id @search(by: [fulltext, exact])

  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime!

  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime

  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])

  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  """ Additional information about the material lot property. """
  description: String @search(by: [fulltext, exact])

  """ The value, set of values, or range of the property. """
  value: String @search(by: [fulltext, exact])

  """ The unit of measure of the associated property value. """
  valueUnitOfMeasure: UnitOfMeasure

  """ The material lot defined in part by this material lot property. """
  materialLot: MaterialLot @hasInverse(field: properties)

  """
  The material sublot defined in part by this material lot property.
  If this material lot property is part of a material lot, this value is not used.
  """
  materialSubLot: MaterialSubLot @hasInverse(field: properties)

  """ The nested material lot property(s) makes up part of this material lot property as the whole. """
  children: [MaterialLotProperty] @hasInverse(field: parent)

  """ The material lot property that this nested material lot property makes up part of as the whole. """
  parent: MaterialLotProperty @hasInverse(field: children)

  """
  If the parent material lot supports a material definition, the material definition property(s) 
  is applied in the material lot property(s). 
  This material lot property maps to the corresponding material definition property.
  """
  mapsToMaterialDefinitionProperty: MaterialDefinitionProperty @hasInverse(field: mapsToMaterialLotProperty)

  """ This testable object property is measured to the test specification containing the evaluated property. """
  correspondsTo: [EvaluatedProperty] @hasInverse(field: materialLotProperty)

  """ The property measurement records the measurement result for this testable object property. """
  recordsMeasurementOf: [PropertyMeasurement] @hasInverse(field: materialLotProperty)
}



"""
Each separately identifiable quantity of the same material lot shall be presented as a material sublot. 
A material lot may be stored in separately identifiable quantities. All material sublots are part of 
the same material lot, so they have the material lot's property values. A material sublot may be just 
a single item.

Material sublots may have sublot specific properties. 

A material sublot property may be tested to the evaluated property in a test specification where the 
measured results may be recorded in a property measurement attribute in a test result. The measured 
results may be evaluated to the test specification criteria in the test specification that references 
the evaluated property where they may be recorded in an evaluated criterion result attribute in the 
test result.

Material sublot property(s) may contain nested material sublot property(s).

Each material sublot shall contain the location of the material sublot and the quantity or amount of 
material available in the material sublot.

Material sublots may contain other material sublots.

A material sublot shall include
    a) a unique identification of the material sublot, 
    b) the storage location of the material sublot,
    c) the unit of measure of the material, and
    d) any status of the material sublot.
"""
type MaterialSubLot @withSubscription @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!

  """
  A unique identification of a specific material sublot, within the scope of the information exchanged 
  (operations capability, operations schedule, operations performance …). 
  The ID is used in other parts of the model when the material sublot needs to be identified, such as 
  the operations capability for this material sublot, or an operations response identifying the material 
  sublot used.
  """
  id: String! @search(by: [fulltext, exact])

  """
  Entity to define the specific version of the entity. Purposely free for to allow use with a specific 
  revision scheme. For example `1`, `2` or `Rev A03`, `Rev B01`. Versions are lexicographically compared.
  """
  version: String! @search(by: [fulltext, exact])

  """
  A named unique instance of the entity. Note that this attribute is subject to change, based on 
  the implementation timeline of composite keys within dgraph.
  """
  key: String! @id @search(by: [fulltext, exact])

  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime!

  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime

  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])

  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  """ Additional information about the material sublot property. """
  description: String @search(by: [fulltext, exact])

  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope @hasInverse(field: materialSubLots)

  """
  Spatially defines the material sublot as a zero-dimensional point, one-dimensional line, or 
  two-dimensional shape or three-dimensional solid.
  """
  spatialDefinition: SpatialDefinition

  """ Identifies the operational location storage location of the material sublot. """
  storageLocationOperationalLocation: OperationalLocation @hasInverse(field: materialSubLots)

  """ Identifies the equipment storage location of the material sublot. """
  storageLocationEquipment: Equipment @hasInverse(field: materialSubLots)

  """ Identifies the physical asset storage location of the material sublot. """
  storageLocationPhysicalAsset: PhysicalAsset @hasInverse(field: materialSubLots)

  """ Identifies the storage location description of the material sublot. """
  storageLocationDescription: String @search(by: [fulltext, exact])

  """
  Defines the type of the assembly. 
  Defined types are
    - physical: the components of the assembly are physically connected or in the same area;
    - logical:  the components of the assembly are not necessarily physically connected or in 
      the same area.
  """
  assemblyType: AssemblyType @search(by: [exact])

  """
  Defines the type of the relationships.
  Defined types are
    - permanent: an assembly that is not intended to be split during the production process;
    - transient: a temporary assembly using during production, such as a pallet of different 
      materials or a batch kit.
  """
  assemblyRelationship: AssemblyRelationship @search(by: [exact])

  """ Status of the material sublot in manufacturing operations. Values defined by implementation. """
  status: String @search(by: [fulltext, exact])

  """
  Planning and logistics disposition of a material sublot or assembly of material lots. 
  Defined values for the disposition of a material sublot are
    - planned: a material sublot that does not yet physically exist, is assigned to an operations 
      request (segment requirement) or work request (Part 4 object) or job order (Part 4 object); 
    - in process: the material sublot is in the process of being worked on; 
    - restricted: a material sublot is not permitted for normal use due to a restriction condition. 
    - unrestricted: material sublot is permitted for normal use without restriction; and
    - closed: material sublot has been reconciled as completely consumed, sold or disposed of.
  """
  disposition: Disposition @search(by: [exact])

  """ The quantity of the material sublot. """
  quantity: Float

  """ The unit of measure of the associated quantity. """
  quantityUnitOfMeasure: UnitOfMeasure

  """ This material sublot is part of the related object as the whole. """
  children: [MaterialSubLot] @hasInverse(field: parent)
    
  """ The material sublot is part of the related object(s) as the whole. """
  parent: MaterialSubLot @hasInverse(field: children)

  """ The material lot property(s) of this material sublot. """
  properties: [MaterialLotProperty] @hasInverse(field: materialSubLot)

  """
  The material sublot is constructed based on this material sublot. The material sublot properties 
  map to a corresponding material lot property.
  """
  isAssembledFromMaterialSubLot: [MaterialSubLot] @hasInverse(field: isComponentOfMaterialSubLot)
  
  """
  This material sublot is constructed based on the material sublot. The material sublot properties 
  map to a corresponding material lot property.
  """ 
  isComponentOfMaterialSubLot: MaterialSubLot @hasInverse(field: isAssembledFromMaterialSubLot)

  """ This material lot is part of the material sublot as the whole. """
  isComponentOfMaterialLot: MaterialLot @hasInverse(field: isAssembledFromMaterialSubLot)

  """ The material lot(s) makes up part of this material sublot as the whole. """
  isAssembledFromMaterialLot: [MaterialLot] @hasInverse(field: isComponentOfMaterialSubLot)

  """ The material lot that is being constructed based on this material sublot. """
  parentMaterialLot: MaterialLot @hasInverse(field: childSubLot)

  """ The material requirements this material sublot is associated with for. """
  materialRequirements: [MaterialRequirement] @hasInverse(field: materialSubLots)

  """ The material actuals this material sublot is associated with. """
  materialActual: [MaterialActual] @hasInverse(field: materialSubLot)

  """ The material specifications this material sublot is associated with. """
  workSpecifications: [MaterialSpecification] @hasInverse(field: materialSubLot)

  """ The ID of this testable object ID(s) evaluated by the test specification. """
  testedBy: [TestSpecification]

  """ The test specification(s) used to evaluate this testable object. """
  specifiesTests: [TestSpecification]

  """
  The test result records the evaluated criterion result attribute and property measurement for 
  this testable object.
  """
  testResults: [TestResult]
}


""" Libre specific extension to ISA95 schema. """
type MaterialAlternate @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!

  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime!

  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime

  """ The material identified as having an alternate. """
  materialDefinition: MaterialDefinition! @hasInverse(field: alternates)
  
  """ The material that can be used as an alternate. """
  alternateMaterial: MaterialDefinition!
  
  effectiveDateTime: DateTime!
  
  priorityOrder: Int!
}


type UnitOfMeasure @withSubscription @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!
  
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime!

  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime

  """ The actual unit associated with the values measured. """
  id: String! @id @search(by: [fulltext, exact])

  dataType: DataType
}


type UnitOfMeasureConversion @withSubscription @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!
  
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime!

  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime

  """ The unit of measure being converted from. """
  fromUnitOfMeasure: UnitOfMeasure!

  """ The unit of measure to convert to. """
  toUnitOfMeasure: UnitOfMeasure!
  
  numerator: Float!

  denominator: Float!

  materialDefinition: MaterialDefinitionVersion! @hasInverse(field: uomConversions)
}


""" 
Defines the expected use of the material class, material definition, material lot, or material 
sublot in the context of the process segment. 
"""
enum MaterialUse {
  Initial
  Produced
  ByProduct
  CoProduct
  Consumable
  Consumed
  Transferred
  Scrap
  Rework
  Received
  Packed
  Shipped
  Adjustment
}


""" 
Planning and logistics disposition of a material lot or assembly of material lots, material sublots, 
or assmembly of material lots or sublots. 
"""
enum Disposition {
  """
  A material lot or sublot that does not yet physically exist, is assigned to an operations request 
  (segment requirement) or work request (Part 4 object) or job order (Part 4 object).
  """
  Planned

  """ The material lot or sublot is in the process of being worked on. """
  InProcess

  """ A material lot or sublot is not permitted for normal use due to a restriction condition. """
  Restricted

  """ Material lot or sublot is permitted for normal use without restriction. """
  Unrestricted

  """ Material lot or sublot has been reconciled as completely consumed, sold or disposed of. """
  Closed
}


""" Defines the type of the assembly. """
enum AssemblyType {
  """ The components of the assembly are physically connected or in the same area. """
  Physical

  """ The components of the assembly are not necessarily physically connected or in the same area. """
  Logical
}


""" Defines the type of the relationships. """
enum AssemblyRelationship {
  """ An assembly that is not intended to be split during the production process. """
  Permanent

  """ A temporary assembly using during production, such as a pallet of different materials or a batch kit. """
  Transient
}# ################################################################################
# Process Segment Information Model
# ################################################################################
#
#
# A process segment lists the classes of personnel, equipment, physical assets,
# and material needed, and/or it may present specific resources, such as specific
# equipment needed for the process segment. A process segment may list the quantity
# of the resource needed.
#
#  A process segment is something that occurs or can occur during manufacturing operations.
#
#
#  Process segment may identify
#  a)	the time duration associated with the resource;
#       EXAMPLE 1 Five hours or 5 h/100 kg.
#  b)	constraint rules associated with ordering or sequencing of segments; and
#  c)	a process segment may be made up of other process segments, in a hierarchy of
#       definitions.
#  Process segments may contain specifications of specific resources required by the
#  process segment. Process segments may contain parameters that can be listed in
#  specific operations requests.
#
#  A process segment may be a specialization of another process segment.
#  A process segment shall be defined as a “pattern” or an “instance”.
#  A pattern process segment defines a ‘template’, upon which other pattern or
#  instance process segments may be based.
#  Unlike instance process segments, pattern process segments shall not be directly
#  scheduled or tracked.
#  Therefore, segment requirements, segment responses and process segment capabilities
#  shall not reference pattern process segments.
#
#  Where a process segment references a work master, the definition type
#  (pattern or instance) of the referenced work master shall have the same value
#  as that of the process segment.
#
#  The parameter, personnel, equipment, physical asset and material specifications
#  of a process segment may map to those of any pattern process segment upon which
#   the process segment is based.
# ################################################################################
# Operations Test Model
# ################################################################################
#
#
# Operations test information is exchanged to communicate criteria that are to be
# applied to perform tests of personnel, equipment, physical assets and/or materials
# and to communicate the results of those tests.
#
# The operations test model defines test specification and test result information
#  and how those two sets of exchanged information are related to
#
#  •    testable object and testable object property as an interface object to be or
#        has been tested ;
#  •	operations test requirement as an interface object (listed in Table 98);
#  •	resource actual as an interface object
#  •	work definition (defined in Part 4 of this standard) as the test method to
#        be or has been used to perform the test(s) to the test specification.

"""
The test specification details the test specification criteria and the tested evaluated property(s) required 
for a testable object to match the quality or performance requirements of the business or particular customers.

A test specification may contain other test specifications to form a hierarchy of test specifications. When 
a hierarchy of test specifications are used, the result of the parent object in the hierarchy shall be the 
worst-case result of all the respective child object results.
"""
type TestSpecification @withSubscription @key(fields: "iid") {
    """ Unique internal database identifier. """
    iid: ID!

    """ An identification of a test for certifying one or more values. """
    id: String! @search(by: [fulltext, exact])

    """ An identification of the version of the test specification. """
    version: String! @search(by: [fulltext, exact])

    """
    A named unique instance of the entity. Note that this attribute is subject to change, based on 
    the implementation timeline of composite keys within dgraph.
    """
    key: String! @id @search(by: [fulltext, exact])

    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime!

    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime

    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default(
        add: { value: "$now" }
    )

    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default(
        add: { value: "$now" }
        update: { value: "$now" }
    )

    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])

    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    """ A description of the test specification. """
    description: String @search(by: [fulltext, exact])

    """ The date and time on which the test specification was published or generated. """
    publishedDate: DateTime

    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope

    """ Sample size required to perform the test. """
    testSampleSize: String

    """ Defines whether physical sampling is required to perform the test. """
    physicalSample: Boolean

    """ The amount of operations activity required between samples. """
    recurrenceQuantity: String

    """ The duration of operational activity required between samples. """
    recurrenceTimeInterval: String

    """ The parent test specification of this test specification. """
    parent: TestSpecification @hasInverse(field: "children")

    """ The child test specification(s) of this test specification. """
    children: [TestSpecification] @hasInverse(field: "parent")
    
    """ The test specification property values of this test specification. """
    properties: [TestSpecificationProperty] @hasInverse(field: "testSpecification")
    
    """ 
    The test specification criteria which is to be applied to determine the test outcome upon evaluation 
    of the test specification. 
    """
    criteria: [TestSpecificationCriteria] @hasInverse(field: "testSpecification")
    
    """ The evaluated property(s) measured and evaluated by this test specification. """
    evaluatedProperties: [EvaluatedProperty] @hasInverse(field: "testSpecification")
    

    ### Operatons test requirement 0..1
    ### This test specification(s) is used to evaluate these operations test requirement(s).
    """ This test specification(s) is used to evaluate the PersonnelRequirement. """
    requiredByPersonnelRequirement: PersonnelRequirement @hasInverse(field: testedBy)
    """ This test specification(s) is used to evaluate the EquipmentRequirement. """
    requiredByEquipmentRequirement: EquipmentRequirement @hasInverse(field: testedBy)
    # """ This test specification(s) is used to evaluate the PhysicalAssetRequirement. """
    # requiredByPhysicalAssetRequriement: PhysicalAssetRequirement @hasInverse(field: testedBy)
    """ This test specification(s) is used to evaluate the MaterialRequirement. """
    requiredByMaterialRequirement: MaterialRequirement @hasInverse(field: testedBy)
    """ This test specification(s) is used to evaluate the PersonnelSpecification. """
    requiredByPersonnelSpecification: PersonnelSpecification @hasInverse(field: testedBy)
    """ This test specification(s) is used to evaluate the EquipmentSpecification. """
    requiredByEquipmentSpecification: EquipmentSpecification @hasInverse(field: testedBy)
    # """ This test specification(s) is used to evaluate the PhysicalAssetSpecification. """
    # requiredByPhysicalAssetSpecification: PhysicalAssetSpecification @hasInverse(field: testedBy)
    """ This test specification(s) is used to evaluate the MaterialSpecification. """
    requiredByMaterialSpecification: MaterialSpecification @hasInverse(field: testedBy)
    
    
    ### Operatons test requirement 0..*
    ### The operations test requirement ID(s) evaluated by this test specification.
    """ The PersonnelRequirement ID(s) evaluated by this test specification. """
    testsPersonnelRequirements: [PersonnelRequirement] @hasInverse(field: specifiesTests)
    """ The EquipmentRequirement ID(s) evaluated by this test specification. """
    testsEquipmentRequirements: [EquipmentRequirement] @hasInverse(field: specifiesTests)
    # """ The PhysicalAssetRequirement ID(s) evaluated by this test specification. """
    # testsPhysicalAssetRequriements: [PhysicalAssetRequirement] @hasInverse(field: specifiesTests)
    """ The MaterialRequirement ID(s) evaluated by this test specification. """
    testsMaterialRequirements: [MaterialRequirement] @hasInverse(field: specifiesTests)
    """ The PersonnelSpecification ID(s) evaluated by this test specification. """
    testsPersonnelSpecifications: [PersonnelSpecification] @hasInverse(field: specifiesTests)
    """ The EquipmentSpecification ID(s) evaluated by this test specification. """
    testsEquipmentSpecifications: [EquipmentSpecification] @hasInverse(field: specifiesTests)
    # """ The PhysicalAssetSpecification ID(s) evaluated by this test specification. """
    # testsPhysicalAssetSpecifications: [PhysicalAssetSpecification] @hasInverse(field: specifiesTests)
    """ The MaterialSpecification ID(s) evaluated by this test specification. """
    testsMaterialSpecifications: [MaterialSpecification] @hasInverse(field: specifiesTests)


    ### Testable objects interface 0..1 
    ### This test specification(s) is used to evaluate these testable object(s).
    """ This test specification(s) is used to evaluate the PersonnelClass object. """
    requiredByPersonnelClass: PersonnelClass @hasInverse(field: testedBy)
    """ This test specification(s) is used to evaluate the Person object. """
    requiredByPerson: Person @hasInverse(field: testedBy)
    """ This test specification(s) is used to evaluate the EquipmentClass object. """
    requiredByEquipmentClass: EquipmentClass @hasInverse(field: testedBy)
    """ This test specification(s) is used to evaluate the Equipment object. """
    requiredByEquipment: Equipment @hasInverse(field: testedBy)
    """ This test specification(s) is used to evaluate the PhysicalAssetClass object. """
    requiredByPhysicalAssetClass: PhysicalAssetClass @hasInverse(field: testedBy)
    """ This test specification(s) is used to evaluate the PhysicalAsset object. """
    requiredByPhysicalAsset: PhysicalAsset @hasInverse(field: testedBy) 
    """ This test specification(s) is used to evaluate the MaterialClass object. """
    requiredByMaterialClass: MaterialClass @hasInverse(field: testedBy)
    """ This test specification(s) is used to evaluate the MaterialDefinition object. """
    requiredByMaterialDefinition: MaterialDefinition @hasInverse(field: testedBy)
    """ This test specification(s) is used to evaluate the MaterialLot object. """
    requiredByMaterialLot: MaterialLot @hasInverse(field: testedBy)
    """ This test specification(s) is used to evaluate the MaterialSubLot object. """
    requiredByMaterialSubLot: MaterialSubLot @hasInverse(field: testedBy)


    ### Testable objects interface 0..*
    ### The ID(s) of the testable object(s) tested by this test specification.
    """ The ID of the PersonnelClass object tested by this test specification. """
    testsPersonnelClass: [PersonnelClass] @hasInverse(field: specifiesTests)
    """ The ID of the Person object tested by this test specification. """
    testsPerson: [Person] @hasInverse(field: specifiesTests)
    """ The ID of the EquipmentClass object tested by this test specification. """
    testsEquipmentClass: [EquipmentClass] @hasInverse(field: specifiesTests)
    """ The ID of the Equipment object tested by this test specification. """
    testsEquipment: [Equipment] @hasInverse(field: specifiesTests)
    """ The ID of the PhysicalAssetClass object tested by this test specification. """
    testsPhysicalAssetClass: [PhysicalAssetClass] @hasInverse(field: specifiesTests)
    """ The ID of the PhysicalAsset object tested by this test specification. """
    testsPhysicalAsset: [PhysicalAsset] @hasInverse(field: specifiesTests) 
    """ The ID of the MaterialClass object tested by this test specification. """
    testsMaterialClass: [MaterialClass] @hasInverse(field: specifiesTests)
    """ The ID of the MaterialDefinition object tested by this test specification. """
    testsMaterialDefinition: [MaterialDefinition] @hasInverse(field: specifiesTests)
    """ The ID of the MaterialLot object tested by this test specification. """
    testsMaterialLot: [MaterialLot] @hasInverse(field: specifiesTests)
    """ The ID of the MaterialSubLot object tested by this test specification. """
    testsMaterialSubLot: [MaterialSubLot] @hasInverse(field: specifiesTests)
}


"""
The test specification property object defines properties of the test specification. These properties 
are not the characteristics to be tested.
"""
type TestSpecificationProperty @key(fields: "iid") {
    """ Unique internal database identifier. """
    iid: ID!

    """ Identification of the test specification property. """
    id: String! @id @search(by: [fulltext, exact])

    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime!

    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime

    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default(
        add: { value: "$now" }
    )

    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default(
        add: { value: "$now" }
        update: { value: "$now" }
    )

    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])

    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    """ Description of the test specification property """
    description: String @search(by: [fulltext, exact]) 

    """ The value, set of values, or range of the property. """
    value: String @search(by:[fulltext,exact])

    """ The unit of measure of the associated property values, if applicable. """
    valueUnitOfMeasure: UnitOfMeasure

    """ The parent test specification property(s) of this test specification property. """
    parent: TestSpecificationProperty @hasInverse(field: "children")

    """ The child test specification property(s) of this test specification property. """
    children: [TestSpecificationProperty] @hasInverse(field: "parent")

    """ These test specification property values are for the test specification. """
    testSpecification: TestSpecification! @hasInverse(field: "properties")
}


"""
The test specification criteria object defines the set of criterion to evaluate and the test result 
to be reported when a testable object satisfies those criteria.
"""
type TestSpecificationCriteria @key(fields: "iid") {
    """ Unique internal database identifier. """
    iid: ID!

    """ Identification of the test specification criteria. """
    id: String! @id @search(by: [fulltext, exact])

    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime!

    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime

    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default(
        add: { value: "$now" }
    )

    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default(
        add: { value: "$now" }
        update: { value: "$now" }
    )

    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])

    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    """ Description of the test specification criteria. """
    description: String @search(by: [fulltext, exact]) 

    """ 
    Specifies the sequence of evaluation of test specification criteria. The sequence shall be executed 
    lowest first. Duplicate sequence values shall be executed in parallel with worst case result 
    reported if both criteria are evaluated as true. 
    """
    sequence: Int

    """ 
    An expression of the test specification criteria to be evaluated. If the expression is empty, 
    then the test specification criteria represents the else criterion. 
    """
    expression: String @search(by:[fulltext,exact])
    
    """
    The value to be given to the result of the test if the test specification criteria expression is 
    evaluated as true.
    """
    result: String @search(by:[fulltext,exact])

    """ This test specification criteria determine the test outcome upon evaluation of the test specification. """
    testSpecification: TestSpecification! @hasInverse(field: "criteria")
    
    """ This test specification criteria used to evaluate the evaluated property of a testable object property. """
    evaluatedProperties: [EvaluatedProperty] @hasInverse(field: "criteria")
}


"""
The evaluated property object identifies the set of testable object / testable object property pairs 
to be measured and the applicable test method to obtain a property measurement.
"""
type EvaluatedProperty @key(fields: "iid") {
    """ Unique internal database identifier. """
    iid: ID!

    """ Identification of the evaluated property. """
    id: String! @id @search(by: [fulltext, exact])

    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime!

    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime

    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default(
        add: { value: "$now" }
    )

    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default(
        add: { value: "$now" }
        update: { value: "$now" }
    )

    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])

    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    """ Description of the test specification criteria. """
    description: String @search(by: [fulltext, exact]) 
    
    # """ 
    # The work master ID or work directive ID which is applied test method to obtain the measurement of 
    # this evaluated property for test specification of the testable object property ID. 
    # """
    # workDefinition: WorkDefinition

    """ This evaluated property(s) is measured and evaluated by the test specification. """
    testSpecification: TestSpecification! @hasInverse(field: "evaluatedProperties")

    """ This test specification criteria used to evaluate the evaluated property of a testable object property. """
    criteria: [TestSpecificationCriteria] @hasInverse(field: "evaluatedProperties")


    ### Testable object property 0..*
    ### The testable object property ID(s) which are to be measured by this test specification.
    # """ The PersonnelClassProperty ID which is to be measured by this test specification. """
    # personnelClassProperty: [PersonnelClassProperty] @hasInverse(field: correspondsTo)
    # """ The PersonProperty ID which is to be measured by this test specification. """
    # personProperty: [PersonProperty] @hasInverse(field: correspondsTo)
    # """ The EquipmentClassProperty ID which is to be measured by this test specification. """
    # equipmentClassProperty: [EquipmentClassProperty] @hasInverse(field: correspondsTo)
    # """ The EquipmentProperty ID which is to be measured by this test specification. """
    # equipmentProperty: [EquipmentProperty] @hasInverse(field: correspondsTo)
    """ The PhysicalAssetClassProperty ID which is to be measured by this test specification. """
    physicalAssetClassProperty: [PhysicalAssetClassProperty] @hasInverse(field: correspondsTo)
    """ The PhysicalAssetProperty ID which is to be measured by this test specification. """
    physicalAssetProperty: [PhysicalAssetProperty] @hasInverse(field: correspondsTo)
    """ The MaterialClassProperty ID which is to be measured by this test specification. """
    materialClassProperty: [MaterialClassProperty] @hasInverse(field: correspondsTo)
    """ The MaterialDefinitionProperty ID which is to be measured by this test specification. """
    materialDefinitionProperty: [MaterialDefinitionProperty] @hasInverse(field: correspondsTo)
    """ The MaterialLotProperty ID which is to be measured by this test specification. """
    materialLotProperty: [MaterialLotProperty] @hasInverse(field: correspondsTo)
}


"""
The results from the test evaluation of property measurement of the testable object property of the 
testable object per the test specifications shall be presented as test results. A test result reports 
the measured results and evaluation of test specification criteria from a test for a specific person, 
piece of equipment, physical asset, material lot or material sublot.
"""
type TestResult @key(fields: "iid") {
    """ Unique internal database identifier. """
    iid: ID!

    """ An identification of the specific test result. """
    id: String! @id @search(by: [fulltext, exact])

    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime!

    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime

    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default(
        add: { value: "$now" }
    )

    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default(
        add: { value: "$now" }
        update: { value: "$now" }
    )

    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])

    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    """ Additional information about the test result. """
    description: String @search(by: [fulltext, exact]) 

    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    
    """ Date and time of evaluation of the test result. """
    evaluationDate: DateTime

    """ Result obtained from evaluation of the associated test specification criteria. """
    evaluationCriterionResult: String

    """ Date of the expiration of the test result criteria. """
    expiration: DateTime
    
    """ The parent test result of this test result. """
    parent: TestResult @hasInverse(field: "children")

    """ The child test result(s) of this test result. """
    children: [TestResult] @hasInverse(field: "parent")
    
    """ The measurement obtained for each testable object property. """
    propertyMeasurements: [PropertyMeasurement] @hasInverse(field: "testResult")
    

    ### Operation test requirement 0..1
    ### The operations test requirement object(s) applied to execute the test and generate the test result(s).
    """ The PersonnelRequirement object applied to execute the test and generate the test result. """
    personnelRequirement: PersonnelRequirement @hasInverse(field: testResults)
    """ The EquipmentRequirement object applied to execute the test and generate the test result. """
    equipmentRequirement: EquipmentRequirement @hasInverse(field: testResults)
    # """ The PhysicalAssetRequirement object applied to execute the test and generate the test result. """
    # physicalAssetRequriement: PhysicalAssetRequirement @hasInverse(field: testResults)
    """ The MaterialRequirement object applied to execute the test and generate the test result. """
    materialRequirement: MaterialRequirement @hasInverse(field: testResults)
    """ The PersonnelSpecification object applied to execute the test and generate the test result. """
    personnelSpecification: PersonnelSpecification @hasInverse(field: testResults)
    """ The EquipmentSpecification object applied to execute the test and generate the test result. """
    equipmentSpecification: EquipmentSpecification @hasInverse(field: testResults)
    # """ The PhysicalAssetSpecification object applied to execute the test and generate the test result. """
    # physicalAssetSpecification: PhysicalAssetSpecification @hasInverse(field: testResults)
    """ The MaterialSpecification object applied to execute the test and generate the test result. """
    materialSpecification: MaterialSpecification @hasInverse(field: testResults)


    ### Testable object 0..1
    ### The tested object(s) recorded by this test result.
    """ The PersonnelClass object recorded by this test result. """
    personnelClass: PersonnelClass @hasInverse(field: testResults)
    """ The Person object recorded by this test result. """
    person: Person @hasInverse(field: testResults)
    """ The EquipmentClass object recorded by this test result. """
    equipmentClass: EquipmentClass @hasInverse(field: testResults)
    """ The Equipment object recorded by this test result. """
    equipment: Equipment @hasInverse(field: testResults)
    """ The PhysicalAssetClass object recorded by this test result. """
    physicalAssetClass: PhysicalAssetClass @hasInverse(field: testResults)
    """ The PhysicalAsset object recorded by this test result. """
    physicalAsset: PhysicalAsset @hasInverse(field: testResults)
    """ The MaterialClass object recorded by this test result. """
    materialClass: MaterialClass @hasInverse(field: testResults)
    """ The MaterialDefinition object recorded by this test result. """
    materialDefinition: MaterialDefinition @hasInverse(field: testResults)
    """ The MaterialLot object recorded by this test result. """
    materialLot: MaterialLot @hasInverse(field: testResults)
    """ The MaterialSubLot object recorded by this test result. """
    materialSubLot: MaterialSubLot @hasInverse(field: testResults)


    ### Resource actual 0..1
    ### The resource actual reports this test result in a segment response or job response.
    """ The PersonnelActual reports this test result in a segment response or job response. """
    personnelActual: PersonnelActual @hasInverse(field: testResults)
    """ The EquipmentActual reports this test result in a segment response or job response. """
    equipmentActual: EquipmentActual @hasInverse(field: testResults)
    # """ The PhysicalAssetActual reports this test result in a segment response or job response. """
    # physicalAssetActual: PhysicalAssetActual @hasInverse(field: testResults)
    """ The MaterialActual reports this test result in a segment response or job response. """
    materialActual: MaterialActual @hasInverse(field: testResults)
}


"""
The measurement obtained during execution of work master (defined in Part 4 of this standard) shall be 
presented as a property measurement. A property measurement reports the measurement obtained for a single 
testable object property corresponding to an evaluated property of a test specification for a specific 
person, equipment, physical asset, material lot or material sublot.
"""
type PropertyMeasurement @key(fields: "iid") {
    """ Unique internal database identifier. """
    iid: ID!

    """ An identification of the specific property measurement. """
    id: String! @id @search(by: [fulltext, exact])

    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime!

    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime

    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default(
        add: { value: "$now" }
    )

    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default(
        add: { value: "$now" }
        update: { value: "$now" }
    )

    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])

    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    """ Additional information about the property measurement. """
    description: String @search(by: [fulltext, exact]) 

    """ The date and time when the measurement was obtained. """
    measurementDate: DateTime  

    """ The measured value for the testable object property. """
    value: String @search(by:[fulltext,exact])

    """ The unit of measure of the measured value, if applicable. """
    valueUnitOfMeasure: UnitOfMeasure

    """ The date of the expiration of the property measurement. """
    expiration: DateTime

    """ This property measurement obtained for each testable object property in the test result. """
    testResult: TestResult! @hasInverse(field: "propertyMeasurements")

    # """ 
    # The work master ID or work directive ID which is applied test method to obtain the measurement of this 
    # property measurement for test specification of the testable object property ID.
    # """
    # workDefinition: WorkDefinition
    

    ### Testable object property 0..1
    ### The testable object property ID for which this property measurement is records the measurement result.
    # """ The PersonnelClassProperty ID for which this property measurement is records the measurement result. """
    # personnelClassProperty: PersonnelClassProperty @hasInverse(field: recordsMeasurementOf)
    # """ The PersonProperty ID for which this property measurement is records the measurement result. """
    # personProperty: PersonProperty @hasInverse(field: recordsMeasurementOf)
    # """ The EquipmentClassProperty ID for which this property measurement is records the measurement result. """
    # equipmentClassProperty: EquipmentClassProperty @hasInverse(field: recordsMeasurementOf)
    # """ The EquipmentProperty ID for which this property measurement is records the measurement result. """
    # equipmentProperty: EquipmentProperty @hasInverse(field: recordsMeasurementOf)
    """ The PhysicalAssetClassProperty ID for which this property measurement is records the measurement result. """
    physicalAssetClassProperty: PhysicalAssetClassProperty @hasInverse(field: recordsMeasurementOf)
    """ The PhysicalAssetProperty ID for which this property measurement is records the measurement result. """
    physicalAssetProperty: PhysicalAssetProperty @hasInverse(field: recordsMeasurementOf)
    """ The MaterialClassProperty ID for which this property measurement is records the measurement result. """
    materialClassProperty: MaterialClassProperty @hasInverse(field: recordsMeasurementOf)
    """ The MaterialDefinitionProperty ID for which this property measurement is records the measurement result. """
    materialDefinitionProperty: MaterialDefinitionProperty @hasInverse(field: recordsMeasurementOf)
    """ The MaterialLotProperty ID for which this property measurement is records the measurement result. """
    materialLotProperty: MaterialLotProperty @hasInverse(field: recordsMeasurementOf)
}
# ################################################################################
# Operations Record Information Model
# ################################################################################
#
#
# The operations record template,
# operations record entry template, and operations record specification template are
# abstract types meaning they are not standalone exchange objects.
# These abstract objects are realized in specialized implementations as occurrences
# of the operations
# event record template in this Part 2 and the work record in Part 4 of this standard.
# The operations record model represents a common structure for representing bundled
# information reported in data exchanges.
# The operations record template bundles operations record entry template objects
# by the type of action specifying the attribute, action, with defined values of created,
# changed, deleted and observed.
# The operations record entry template embeds objects defined in this standard and
# manufacturing operations profiles or references to external objects.
# The operations record specification template specifies the content and form of
# objects in an operations record template within the associated operations record
# entry template(s).
# ################################################################################
# Operations Event Information Model
# ################################################################################
#
#
# The operations event model specializes the operations record object to represent
# required information per the scope requirements of the operations event model.
# The attributes and relationships for the operations event record shall include
# the attributes of the abstract object, operations record.

#  The operations record model specializes the supporting objects, operations event
# class record specification and the operations event definition record specification.
# The operations event class record specification and operations event definition
# record specification shall include the attributes of the abstract operations record
# specification.
# ################################################################################
# Operations Definition Information Model
# ################################################################################
#
#
# An operations definition defines the resources required to perform a specified operation.
# The operations definition may apply to defining production, maintenance, quality test
# and inventory operations.
# The actual definition of how to perform the operation is not included in the
# object model and are defined in a work definition.
#
# Work definitions are defined as the information used to instruct a manufacturing operation
# how to perform the operation.
#
# Based on the production strategy used, production operations specific instructions can be called a
#
# -	general recipe (IEC 61512 series),
# -	site recipe (IEC 61512 series),
# -	master recipe (IEC 61512 series),
# -	standard operating procedure (SOP),
# -	standard operating conditions (SOC),
# -	master or product routing
# -	assembly steps.
#
# An operations definition may be a specialization of another operations definition.
# An operations definition shall be defined as pattern or instance.
# A pattern operations definition defines a “template,” upon which other or instance
# operations definitions may be based. Unlike instance operations definitions,
# pattern operations definitions shall not be directly scheduled or tracked.
# Therefore, operations requests and operations responses shall not reference pattern
# operations definitions.
#
# Pattern operations definitions shall provide a basis for standardization and reuse of
# pattern operations definitions across many instance operations definitions across and
# between plants.
# Where an operations definition references a work master defined in Part 4 of this standard,
# the definition type (pattern or instance) attribute of the referenced work master shall have
# the same value as that of the operations definition.

"""
An identification of the resources and workflow required to perform a specified unit of work
shall be defined as a work definition. The work definition may apply to production, maintenance, quality and inventory
activities.
"""
enum WorkType {
  Production
  Maintenance
  Quality
  Inventory
  Mixed
}

type OperationsDefinition @withSubscription @key(fields: "id"){
  id: ID!
  isActive: Boolean @search
  name: String! @id
  version: String
  description: String
  operationsType: WorkType! @search
  hierarchyScope: String
  billOfMaterial: BillOfMaterial @hasInverse(field: operationsDefinition)
  segments: [OperationsSegment] @hasInverse(field: operationsDefinition)
  operationsRequests: [OperationsRequest] @hasInverse(field: operationsDefinition)
  operationsResponses: [OperationsResponse] @hasInverse(field: operationsDefinition)
  expires: DateTime @search
}

type BillOfMaterial @withSubscription @key(fields: "id"){
  id: ID!
  isActive: Boolean @search
  name: String! @id
  version: String!
  description: String
  materialSpecifications: [MaterialSpecification] @hasInverse(field: billOfMaterial)
  operationsDefinition: OperationsDefinition @hasInverse(field: billOfMaterial)
}

type OperationsSegment @withSubscription @key(fields: "id"){
  id: ID!
  isActive: Boolean @search
  name: String! @search(by: [hash])
  version: String
  description: String @search(by: [hash])
  parent: OperationsSegment @hasInverse(field: children)
  children: [OperationsSegment] @hasInverse(field: parent)
  workType: WorkType @search
  workDefinitionType: String @search(by: [hash])
  duration: Float
  durationUoM: UnitOfMeasure
  orderStartRuleset: OrderStartRuleset @hasInverse(field: segment)
  materialSpecifications: [MaterialSpecification] @hasInverse(field: operationsSegment)
  materialEventRuleset: MaterialEventRuleset @hasInverse(field: segment)
  equipmentSpecifications: [EquipmentSpecification] @hasInverse(field: operationsSegment)
  stateEventRuleset: StateEventRuleset @hasInverse(field: segment)
  personnelSpecifications: [PersonnelSpecification] @hasInverse(field: operationsSegment)
  parameterSpecifications: [ParameterSpecification] @hasInverse(field: operationsSegment)
  hierarchyScope: String
  inflows: [SegmentDependency] @hasInverse(field: to)
  outflows: [SegmentDependency] @hasInverse(field: from)
  operationsDefinition: OperationsDefinition @hasInverse(field: segments)
  jobOrders: [JobOrder] @hasInverse(field: operationsSegment)
  segmentRequirements: [SegmentRequirement] @hasInverse(field: segment)
  positionX: Int
  positionY: Int
  processSegments: [ProcessSegment] @hasInverse(field: operationsSegments)
}

type ProcessSegment @withSubscription @key(fields: "id") {
  id: ID!
  name: String! @id
  description: String
  workType: WorkType!
  version: String
  isActive: Boolean
  duration: Float
  durationUoM: UnitOfMeasure
  inflows: [ProcessSegmentDependency] @hasInverse(field: to)
  outflows: [ProcessSegmentDependency] @hasInverse(field: from)
  children: [ProcessSegment] @hasInverse(field: parent)
  parent: ProcessSegment @hasInverse(field: children)
  uiComponent: String
  positionX: Int
  positionY: Int
  materialSpecifications: [MaterialSpecification] @hasInverse(field: processSegment)
  equipmentSpecifications: [EquipmentSpecification] @hasInverse(field: processSegment)
  personnelSpecifications: [PersonnelSpecification] @hasInverse(field: processSegment)
  parameterSpecifications: [ParameterSpecification] @hasInverse(field: processSegment)
  operationsSegments: [OperationsSegment] @hasInverse(field: processSegments)
}

type ProcessSegmentDependency @withSubscription @key(fields: "id") {
  id: ID!
  isActive: Boolean
  description: String
  from: ProcessSegment! @hasInverse(field: outflows)
  to: ProcessSegment! @hasInverse(field: inflows)
  dependencyType: DependencyType
  dependencyFactor: Float
  factorUoM: UnitOfMeasure
  condition: String
}

type TransitionEventRuleset @withSubscription @key(fields: "id"){
  id: ID!
  name: String!
  segmentDependency: SegmentDependency @hasInverse(field: transitionEventRuleset)
}

type StateEventRuleset @withSubscription @key(fields: "id"){
  id: ID!
  name: String!
  triggerWhen: [RulesetTriggerOption]
  segment: OperationsSegment @hasInverse(field: stateEventRuleset)
  targetState: String!
}

type MaterialEventRuleset @withSubscription @key(fields: "id"){
  id: ID!
  name: String!
  triggerWhen: [RulesetTriggerOption]
  segment: OperationsSegment @hasInverse(field: materialEventRuleset)
  targetMaterial: String!
  targetMaterialOp: String!
}

type OrderStartRuleset @withSubscription @key(fields: "id"){
  id: ID!
  name: String!
  segment: OperationsSegment @hasInverse(field: orderStartRuleset)
}

enum RulesetTriggerOption {
  ORDER_START
  ORDER_END
}

type SegmentDependency @withSubscription @key(fields: "id"){
  id: ID!
  isActive: Boolean @search
  description: String
  from: OperationsSegment! @hasInverse(field: outflows)
  to: OperationsSegment! @hasInverse(field: inflows)
  dependencyType: DependencyType
  dependencyFactor: Float
  factorUoM: UnitOfMeasure
  condition: String
  transitionEventRuleset: TransitionEventRuleset @hasInverse(field: segmentDependency)
  jobOrderDependencies: [JobOrderDependency] @hasInverse(field: segmentDependency)
}

enum DependencyType {
  StartAfterStart
  StartAfterEnd
  EndAfterEnd
  EndAfterStart
  CanRunParallel
  CannotRunParallel
}

# Resoruce Specifications
# ToDo: Split out the properties into separate types
# Dependencies
# Equipment Model, Material Model, Personnel Model, Physical Asset Model,
# Job Model, OperationsDefinition Model, Process Segment Model
# UnitOfMeasure

type EquipmentSpecification @withSubscription @key(fields: "id") {
  id: ID!
  isActive: Boolean @search
  jobOrder: JobOrder @hasInverse(field: equipmentSpecifications)
  operationsSegment: OperationsSegment @hasInverse(field: equipmentSpecifications)
  processSegment: ProcessSegment @hasInverse(field: equipmentSpecifications)
  equipment: Equipment @hasInverse(field: equipmentSpecifications)
  equipmentClass: EquipmentClass @hasInverse(field: equipmentSpecifications)
  description: String
  quantity: Float
  uom: UnitOfMeasure

  """ The ID of this testable object ID(s) evaluated by the test specification. """
  testedBy: [TestSpecification] @hasInverse(field: requiredByEquipmentSpecification)

  """ The test specification(s) used to evaluate this testable object. """
  specifiesTests: [TestSpecification] @hasInverse(field: testsEquipmentSpecifications)

  """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
  testResults: [TestResult] @hasInverse(field: equipmentSpecification)
}

type MaterialSpecification @withSubscription @key(fields: "id") {
  id: ID!
  isActive: Boolean @search
  jobOrder: JobOrder @hasInverse(field: materialSpecifications)
  operationsSegment: OperationsSegment @hasInverse(field: materialSpecifications)
  processSegment: ProcessSegment @hasInverse(field: materialSpecifications)
  billOfMaterial: BillOfMaterial @hasInverse(field: materialSpecifications)
  material: MaterialDefinition @hasInverse(field: workSpecifications)
  materialClass: MaterialClass @hasInverse(field: workSpecifications)
  materialLot: MaterialLot @hasInverse(field: workSpecifications)
  materialSubLot: MaterialSubLot @hasInverse(field: workSpecifications)
  description: String
  materialUse: MaterialUse! @search(by: [hash])
  allowedStates: [String]
  isTracked: Boolean
  isBackFlushed: Boolean @search
  backFlushFromLocation: Equipment
  quantity: Float
  uom: UnitOfMeasure

  """ The ID of this testable object ID(s) evaluated by the test specification. """
  testedBy: [TestSpecification] @hasInverse(field: requiredByMaterialSpecification)

  """ The test specification(s) used to evaluate this testable object. """
  specifiesTests: [TestSpecification] @hasInverse(field: testsMaterialSpecifications)

  """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
  testResults: [TestResult] @hasInverse(field: materialSpecification)
}

type PersonnelSpecification @withSubscription @key(fields: "id") {
  id: ID!
  isActive: Boolean @search
  jobOrder: JobOrder @hasInverse(field: personnelSpecifications)
  operationsSegment: OperationsSegment @hasInverse(field: personnelSpecifications)
  processSegment: ProcessSegment @hasInverse(field: personnelSpecifications)
  person: Person
  personnelClass: PersonnelClass
  description: String
  personnelUse: String
  quantity: Float
  uom: UnitOfMeasure

  """ The ID of this testable object ID(s) evaluated by the test specification. """
  testedBy: [TestSpecification] @hasInverse(field: requiredByPersonnelSpecification)

  """ The test specification(s) used to evaluate this testable object. """
  specifiesTests: [TestSpecification] @hasInverse(field: testsPersonnelSpecifications)

  """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
  testResults: [TestResult] @hasInverse(field: personnelSpecification)

}

type ParameterSpecification @withSubscription @key(fields: "id") {
  id: ID!
  isActive: Boolean @search
  jobOrder: JobOrder @hasInverse(field: parameterSpecifications)
  operationsSegment: OperationsSegment @hasInverse(field: parameterSpecifications)
  material: MaterialDefinitionVersion @hasInverse(field: parameterSpecifications)
  property: Property! @hasInverse(field: parameterSpecifications)
  processSegment: ProcessSegment @hasInverse(field: parameterSpecifications)
  valueDefault: String
  valueSetPoint: String
  valueUpperSpecLimit: Float
  valueLowerSpecLimit: Float
  valueUpperControlLimit: Float
  valueLowerControlLimit: Float
  children: [ParameterSpecification] @hasInverse(field: parent)
  parent: ParameterSpecification @hasInverse(field: children)
}
# ################################################################################
# Operations Schedule Information Model
# ################################################################################
#
#
# A request for operations to be performed is an operations schedule.
# The operations schedule may apply to scheduling of production, maintenance,
# quality test, and inventory operations.

"""
The Operations Schedule may be defined for any specific operation type, or
may be defined for a combination of operation types. If the schedule is for a
combination of work types, the operation type is specified on the Operations Request
"""
type OperationsSchedule @withSubscription @key(fields: "id"){
  id: ID!
  isActive: Boolean @search
  code: String! @id
  operationsType: WorkType @search
  operationsRequests: [OperationsRequest] @hasInverse(field: operationsSchedule)
  publishedDate: DateTime @search
  scheduledStartDate: DateTime @search
  scheduledEndDate: DateTime @search
  hierarchyScope: Equipment
  requestState: RequestState
}

"""
A request for operations to be performed is an operations schedule.
The schedule may apply to operations, maintenance, quality or inventory operations
"""
type OperationsRequest @withSubscription @key(fields: "id"){
  id: ID!
  isActive: Boolean @search
  code: String! @id
  operationsType: WorkType! @search
  operationsSchedule: OperationsSchedule @hasInverse(field: operationsRequests)
  operationsResponses: [OperationsResponse] @hasInverse(field: operationsRequest)
  plannedStartDateTime: DateTime @search
  plannedEndDateTime: DateTime @search
  createdDateTime: DateTime @search
  priority: String
  operationsDefinition: OperationsDefinition! @hasInverse(field: operationsRequests)
  requestState: RequestState!
  quantity: Float!
  quantityUoM: UnitOfMeasure!
  jobOrders: [JobOrder] @hasInverse(field: operationsRequest)
  properties: [Property] @hasInverse(field: operationsRequest)
  segmentRequirements: [SegmentRequirement] @hasInverse(field: operationsRequest)
  notes: String
}

type OperationsResponse @withSubscription @key(fields: "id"){
  id: ID!
  isActive: Boolean @search
  code: String! @id
  operationsType: WorkType! @search
  operationsRequest: OperationsRequest! @hasInverse(field: operationsResponses)
  operationsDefinition: OperationsDefinition! @hasInverse(field: operationsResponses)
  jobResponses: [JobResponse] @hasInverse(field: operationsResponse)
  startDateTime: DateTime! @search
  endDateTime: DateTime @search
  hierarchyScope: Equipment
  responseState: DispatchStatus! @search
  properties: [Property]
}

type RequestState @key(fields: "id") {
  id: ID!
  isActive: Boolean @search
  name: String! @id
  description: String
}

type SegmentRequirement @withSubscription @key(fields: "id"){
  id: ID!
  isActive: Boolean @search
  code: String! @id
  description: String
  operationsType: WorkType @search
  operationsRequest: OperationsRequest! @hasInverse(field: segmentRequirements)
  segment: OperationsSegment @hasInverse(field: segmentRequirements)
  jobOrders: [JobOrder] @hasInverse(field: segmentRequirement)
  earliestStartDate: DateTime @search
  latestEndDate: DateTime @search
  duration: Float
  durationUoM: UnitOfMeasure
  hierarchyScope: Equipment
  requestState: RequestState
  properties: [Property] @hasInverse(field: segmentRequirement)
  materialRequirements: [MaterialRequirement] @hasInverse(field: segmentRequirement)
  equipmentRequirements: [EquipmentRequirement] @hasInverse(field: segmentRequirement)
  personnelRequirements: [PersonnelRequirement] @hasInverse(field: segmentRequirement)
}

# Resoruce Requirements
# ToDo: Split out the properties into separate types
# Dependencies
# Equipment Model, Material Model, Personnel Model, Physical Asset Model,
# Job Model, OperationsSchedule Model
# UnitOfMeasure

"""
An identification of material that is expected to be used in the operations request or job order
"""
type MaterialRequirement @withSubscription @key(fields: "id"){
  id: ID!
  isActive: Boolean @search
  segmentRequirement: SegmentRequirement @hasInverse(field: materialRequirements)
  jobOrder: JobOrder @hasInverse(field: materialRequirements)
  materialClass: MaterialClass @hasInverse(field: materialRequirements)
  material: MaterialDefinition @hasInverse(field: materialRequirements)
  materialLots: [MaterialLot] @hasInverse(field: materialRequirements)
  materialSubLots: [MaterialSubLot] @hasInverse(field: materialRequirements)
  materialUse: MaterialUse!
  quantity: Float!
  quantityUoM: UnitOfMeasure
  properties: [Property]

  """ The ID of this testable object ID(s) evaluated by the test specification. """
  testedBy: [TestSpecification] @hasInverse(field: requiredByMaterialRequirement)

  """ The test specification(s) used to evaluate this testable object. """
  specifiesTests: [TestSpecification] @hasInverse(field: testsMaterialRequirements)

  """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
  testResults: [TestResult] @hasInverse(field: materialRequirement)
}

type EquipmentRequirement @withSubscription @key(fields: "id"){
  id: ID!
  isActive: Boolean @search
  segmentRequirement: SegmentRequirement @hasInverse(field: equipmentRequirements)
  jobOrder: JobOrder @hasInverse(field: equipmentRequirements)
  equipmentClass: EquipmentClass @hasInverse(field: equipmentRequirements)
  equipment: Equipment @hasInverse(field: equipmentRequirements)
  quantity: Float!
  quantityUoM: UnitOfMeasure
  properties: [Property]

  """ The ID of this testable object ID(s) evaluated by the test specification. """
  testedBy: [TestSpecification] @hasInverse(field: requiredByEquipmentRequirement)

  """ The test specification(s) used to evaluate this testable object. """
  specifiesTests: [TestSpecification] @hasInverse(field: testsEquipmentRequirements)

  """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
  testResults: [TestResult] @hasInverse(field: equipmentRequirement)
}

"""
The identification of the number, type, duration and scheduling of specific certifications
and job classifications needed to support the operations request.
A personnel requirement includes the type of personnel needed and the quantity
"""
type PersonnelRequirement @withSubscription @key(fields: "id"){
  id: ID!
  isActive: Boolean @search
  segmentRequirement: SegmentRequirement @hasInverse(field: personnelRequirements)
  jobOrder: JobOrder @hasInverse(field: personnelRequirements)
  personnelClass: PersonnelClass @hasInverse(field: personnelRequirements)
  person: Person @hasInverse(field: personnelRequirements)
  quantity: Float!
  quantityUoM: UnitOfMeasure
  properties: [Property]

  """ The ID of this testable object ID(s) evaluated by the test specification. """
  testedBy: [TestSpecification] @hasInverse(field: requiredByPersonnelRequirement)

  """ The test specification(s) used to evaluate this testable object. """
  specifiesTests: [TestSpecification] @hasInverse(field: testsPersonnelRequirements)

  """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
  testResults: [TestResult] @hasInverse(field: personnelRequirement)
}# ################################################################################
# Operations Performance Information Model
# ################################################################################
#
#
# Operations performance reports on requested manufacturing and is a collection of
# operations responses.
# Operations responses are responses from manufacturing that may be associated with an
# operations request.
# There may be one or more operations responses for a single operations
# request if the manufacturing facility needs to split the operations request into smaller elements.
#

# ToDo: Split out the properties into separate types
# Dependencies
# Equipment, Personnel, Material, Physical Asset
# Job
# UnitOfMeasure
type PersonnelActual @withSubscription @key(fields: "id"){
  id: ID!
  isActive: Boolean @search
  jobResponse: JobResponse! @hasInverse(field: personnelActual)
  person: [Person] @hasInverse(field: personnelActual)
  personVersion: [PersonVersion]
  quantity: Float
  quantityUoM: UnitOfMeasure

  """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
  testResults: [TestResult] @hasInverse(field: personnelActual)
}

type EquipmentActual @withSubscription @key(fields: "id"){
  id: ID!
  isActive: Boolean @search
  jobResponse: JobResponse! @hasInverse(field: equipmentActual)
  
  """
  Identifies the associated equipment or set of equipment actually used for a specific segment response. 
  Typically, either equipment class or equipment is specified, but not both.
  """
  equipment: [Equipment] @hasInverse(field: equipmentActual)
  equipmentVersion: [EquipmentVersion]
  
  """ 
  Identifies the associated equipment class or set of equipment classes actually used for a specific 
  segment response. 
  """
  equipmentClass: [EquipmentClass] @hasInverse(field: equipmentActual)
  
  quantity: Float
  quantityUoM: UnitOfMeasure
  properties: [Property]

  """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
  testResults: [TestResult] @hasInverse(field: equipmentActual)
}

type MaterialActual @withSubscription @key(fields: "id"){
  id: ID!
  isActive: Boolean @search
  jobResponse: JobResponse! @hasInverse(field: materialActual)

  """
  Identifies the associated material definition or set of material definition of the material actual 
  for a specific segment response.
  """
  materialClass: [MaterialClass] @hasInverse(field: materialActual)
  materialDefinition: [MaterialDefinition] @hasInverse(field: materialActual)
  materialDefinitionVersion: [MaterialDefinitionVersion]

  """
  Identifies the associated material lot or set of material lot of the material actual for a specific 
  segment response. Typically, either a material class or material definition is specified.
  """
  materialLot: [MaterialLot] @hasInverse(field: materialActual)

  """
  Identifies the associated material sublot or set of material sublot of the material actual for a 
  specific segment response. Typically, either a material class or material definition is specified.
  """
  materialSubLot: [MaterialSubLot] @hasInverse(field: materialActual)

  materialUse: MaterialUse
  quantity: Float
  quantityUoM: UnitOfMeasure
  properties: [Property]

  """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
  testResults: [TestResult] @hasInverse(field: materialActual)
}
# ################################################################################
# Operations Capability Information Model
# ################################################################################
#
#
# Operations capability information is the collection of information about all resources
# for operations for selected future and past times. This is made up of information
# about equipment, physical assets, material, personnel, and process segments.
# Operations capability describes the names, terms, statuses, and quantities of which
# the manufacturing control system has knowledge .
# ################################################################################
# Process Segment Capability Information Model
# ################################################################################
#
#
# A process segment capability is a representation of a logical grouping of personnel resources,
# equipment resources, physical asset resources, and material that is committed, available,
# or unavailable for a defined process segment for a specific time.
# ################################################################################
# Operations Segment Capability Information Model
# ################################################################################
#
#
# An operations segment capability is a representation of a logical grouping of
# personnel resources, equipment resources, physical asset resources and material resources
# that is committed, available, or unavailable for a defined operations segment for a specific time.
#
# ################################################################################
# Work Definition Information Model
# ################################################################################
#
#
# An identification of the resources and workflow required to perform a specified
# unit of work shall be defined as a work definition. The work definition may apply
# to production, maintenance, quality test, and inventory operations activities.
# ################################################################################
# Workflow Specification Information Model
# ################################################################################
#
#
# A workflow specification is represented as a collection of nodes and connections.
# Each node is defined by a type definition, and each connection is defined by a
# type definition. A node may contain a reference to a work definition.

"""
A workflow specification is represented as a collection of nodes and 
connections. Each node is defined by a type definition, and each connection is
defined by a type definition. A node may contain a reference to a work 
definition. Execution of a Workflow Specification my be requested by a 
JobOrder, and be recorded as a JobResponse
"""
type WorkflowSpecification @withSubscription @primaryKey(fields:["id","version"]) @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!

  acl: [AccessPermission]
  """
  In combination with the Version field, the id is a unique identification of a specific workflow specification that is consistent outside the scope of this database.
  The ID and Version are used in other parts of the model when the workflow specification needs to be identified.
  """
  id: String! @search(by: [fulltext, exact])

  """
  Entity to define the specific version of the entity. Purposely free for to allow use with a specific
  revision scheme. For example `1`, `2` or `Rev A03`, `Rev B01`. Versions are lexicographically compared.
  """
  version: String!  @search(by: [fulltext, exact])
  versionStatus:VersionState! @search
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search

  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  """
  Contains additional information and descriptions of the workflow specification.
  """
  description: String

  """
  Identifies where the exchanged information fits within the role-based equipment hierarchy.
  """
  hierarchyScope: HierarchyScope

  _createdBy: String
  _createdDateTime: DateTime @default( add: { value: "$now" }) @search
  _modifiedBy: String
  _modifiedDateTime: DateTime @default( add: { value: "$now" }, update:{value:"$now"}) @search
  connections: [WorkflowSpecificationConnection] @hasInverse(field: workflowSpecification)
  definitionType: DefinitionType! @default( add:{value:"INSTANCE"})
  includePropertiesOf: [WorkflowSpecification]
  jobOrders: [JobOrder] @hasInverse(field: workflowSpecification)
  jobResponses: [JobResponse] @hasInverse(field: workflowSpecification)
  messages: [WorkflowMessage] @hasInverse(field: workflowSpecification)
  nodes: [WorkflowSpecificationNode] @hasInverse(field: workflowSpecification)
  properties: [WorkflowSpecificationProperty] @hasInverse(field: workflowSpecification)
}

""" 
Resources can be defined as pattern or instance. A pattern resource defines a 
template upon which other pattern or instance resources may be based. Unlike 
instance resources, pattern resources shall not be directly executed. The 
default value is INSTANCE. Defines a “template,” upon which other pattern or 
instance workflow specifications may be based. ANSI/ISA-95.00.04-2018 – 48 –
Unlike instance workflow specifications, pattern workflow specifications shall
not be directly executed. Therefore, a work directive shall only reference an 
instance workflow specification. A pattern work master may reference either a 
pattern or instance workflow specification, while an instance work master shall
only reference an instance workflow specification. A pattern work master may 
reference an instance workflow specification where all work masters (directly 
or indirectly) specializing that pattern work master shall reference the same 
instance workflow specification. This allows a standard instance workflow 
specification to be defined for a pattern work master, which is then 
specialized to a number of pattern or instance work masters, each corresponding
to the same instance workflow specification. Workflow specification nodes shall
assume the definition type (pattern or instance) of the workflow specification 
to which they belong. Therefore, all workflow specification nodes contained 
within a pattern workflow specification shall be assumed to be pattern, while 
all workflow specification nodes contained within an instance workflow 
specification shall be assumed to be instance. Where a workflow specification 
node contains a more detailed workflow specification, the definition type of 
the contained workflow specification shall have the same value as that of the
workflow specification to which the workflow specification node belongs.
"""
enum DefinitionType {
  PATTERN
  INSTANCE
}

"""
A property of a workflow specification shall be defined as a workflow 
specification property. A workflow specification property may contain nested
workflow specification property(s).
"""
type WorkflowSpecificationProperty @withSubscription @primaryKey(fields:["id","version"]) @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!

  acl: [AccessPermission]
  """
  In combination with the Version field, the id is a unique identification of a specific workflow specification that is consistent outside the scope of this database.
  The ID and Version are used in other parts of the model when the workflow specification needs to be identified.
  """
  id: String! @search(by: [fulltext, exact])

  """
  Entity to define the specific version of the entity. Purposely free for to allow use with a specific
  revision scheme. For example `1`, `2` or `Rev A03`, `Rev B01`. Versions are lexicographically compared.
  """
  version: String!  @search(by: [fulltext, exact])
  versionStatus:VersionState! @search
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search

  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search
  """
  This workflow specification specializes the pattern workflow specification.
  """
  workflowSpecification: WorkflowSpecification! @hasInverse(field: properties)
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])


  dataType: DataType
  definitionType: DefinitionType! @default( add:{value:"INSTANCE"})


  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  """ Additional information about the WorkflowSpecificationProperty. """
  description: String @search(by: [fulltext, exact])

  """ The value, set of values, or range of the property. """
  value: String @search(by: [fulltext, exact])

  """ The unit of measure of the associated property value. """
  valueUnitOfMeasure: UnitOfMeasure

  """ The nested WorkflowSpecificationProperty(s) makes up part of this equipment property as the whole. """
  children: [WorkflowSpecificationProperty] @hasInverse(field: parent)

  """ The WorkflowSpecificationProperty that this nested equipment property makes up part of as the whole. """
  parent: WorkflowSpecificationProperty @hasInverse(field: children)

}

"""
WorkflowMessage: Extension of ISA95 Standard to accommodate BPMN2.0. Sooner or
later, most processes require communication, which can be represented in BPMN 
by means of the message event. You’ll recognize it as the small envelope. The 
meaning of “message” in BPMN is not restricted to letters, e-mails, or calls.
Any action that refers to a specific addressee and represents or contains
information for the addressee is a message.
"""
type WorkflowMessage @key(fields: "iid") {
  """
  Uniquely identifies the workflow message. Required attribute.
  """
  iid: ID!

  id: String! @id
  reference: String
  workflowSpecification: WorkflowSpecification @hasInverse(field: messages)
  node: WorkflowSpecificationNode @hasInverse(field: message)
}

"""
A workflow specification node is a step in a workflow. It may have a reference
to an activity executed in Level 2, a reference to a work definition, a nested
workflow specification, or an entity used in the represented format (such as a
decision element, transition condition, or starting point).

NOTE:
Nested workflow specifications, such as the ISA-88.00.03 recipe hierarchy, can 
be represented through workflow specification nodes that contain other workflow
specifications (a unit procedure contains the operation definition).
"""
type WorkflowSpecificationNode @primaryKey(fields:["id","version"]) @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!

  acl: [AccessPermission]
  """
  In combination with the Version field, the id is a unique identification of a specific workflow specification that is consistent outside the scope of this database.
  The ID and Version are used in other parts of the model when the workflow specification needs to be identified.
  """
  id: String! @search(by: [fulltext, exact])

  """
  Entity to define the specific version of the entity. Purposely free for to allow use with a specific
  revision scheme. For example `1`, `2` or `Rev A03`, `Rev B01`. Versions are lexicographically compared.
  """
  version: String!  @search(by: [fulltext, exact])
  versionStatus:VersionState! @search
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search

  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  """
  Contains additional information and descriptions of the workflow specification node.
  """
  description: String

  """
  Identifies where the exchanged information fits within the role-based equipment hierarchy.
  """
  hierarchyScope: HierarchyScope

  """
  The workflow specification defines in part by this workflow specification node as the whole.
  """
  workflowSpecification: WorkflowSpecification! @hasInverse(field: nodes)

  """
  This workflow specification node defined in part the workflow specification node property(s).
  """
  properties: [WorkflowSpecificationNodeProperty] @hasInverse(field: node)

  """
  The workflow specification node related to this job response.
  """
  jobResponses: [JobResponse] @hasInverse(field: workflowSpecificationNode)

  """
  The workflow specification connection(s) from this workflow specification node.
  """
  outflows: [WorkflowSpecificationConnection] @hasInverse(field: from)

  """
  This workflow specification node(s) to the workflow specification connection(s).
  """
  inflows: [WorkflowSpecificationConnection] @hasInverse(field: to)

  _createdBy: String
  _createdDateTime: DateTime @default( add: { value: "$now" }) @search
  _modifiedBy: String
  _modifiedDateTime: DateTime @default( add: { value: "$now" }, update:{value:"$now"}) @search
  form: Form @hasInverse(field: workflowSpecificationNodes)
  inputs: [WorkflowSpecificationNodeVariable]
  jobOrders: [JobOrder] @hasInverse(field: workflowSpecificationNode)
  message: WorkflowMessage @hasInverse(field: node)
  nodeType: WorkflowSpecificationNodeType! @hasInverse(field: nodes)
  outputs: [WorkflowSpecificationNodeVariable]
  role: String
  shape: WorkflowShape @hasInverse(field: node)
  uiComponent: String
}

"""
WorkflowShape: Extension of ISA95 Standard to accommodate BPMN2.0. The shape 
stores the information needed to display the action in a BPMN diagram.
"""
type WorkflowShape @primaryKey(fields:["id","version"]) @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!

  acl: [AccessPermission]
  """
  In combination with the Version field, the id is a unique identification of a specific workflow specification that is consistent outside the scope of this database.
  The ID and Version are used in other parts of the model when the workflow specification needs to be identified.
  """
  id: String! @search(by: [fulltext, exact])

  """
  Entity to define the specific version of the entity. Purposely free for to allow use with a specific
  revision scheme. For example `1`, `2` or `Rev A03`, `Rev B01`. Versions are lexicographically compared.
  """
  version: String!  @search(by: [fulltext, exact])
  versionStatus:VersionState! @search
  effectiveEndDateTime: DateTime @search
  effectiveStartDateTime: DateTime! @search

  node: WorkflowSpecificationNode! @hasInverse(field: shape)
  x: String!
  y: String!
  width: String!
  height: String!
  icon: String
}

type WorkflowSpecificationNodeVariable @key(fields: "iid") {
  """
  Uniquely identifies the workflow specification node variable. Required attribute.
  """
  iid: ID!
  
  source: String!
  target: String!
}

"""
A property of a workflow specification node shall be defined as a workflow
specification node property.

A workflow specification node property may contain nested workflow 
specification node property(s).

Workflow specification node property(s) may by used to specify the defined 
properties that can be associated with the specific node type.
"""
type WorkflowSpecificationNodeProperty @withSubscription @key(fields: "iid") {
  """
  A unique identification of the property. Required attribute.
  """
  iid: ID!
  acl: [AccessPermission]
  dataType: DataType
  definitionType: DefinitionType! @default( add:{value:"INSTANCE"})
  effectiveEndDateTime: DateTime @search
  effectiveStartDateTime: DateTime @search
  id: String! @id
  """
  Additional information about the property.
  """
  description: String

  """
  The default value, set of values, or range of the property.
  """
  value: String @search(by: [exact])

  """
  The unit of measure of the associated property value.
  """
  unitOfMeasure: UnitOfMeasure

  """
  The workflow specification node defined in part by this workflow specification node property(s).
  """
  node: WorkflowSpecificationNode @hasInverse(field: properties)

  """
  The child workflow specification node properties of this workflow specification node property.
  """
  children: [WorkflowSpecificationNodeProperty] @hasInverse(field: parent)

  """
  The parent workflow specification node property of this workflow specification node property.
  """
  parent: WorkflowSpecificationNodeProperty @hasInverse(field: children)

  _createdBy: String
  _createdDateTime: DateTime @default( add: { value: "$now" }) @search
  _modifiedBy: String
  _modifiedDateTime: DateTime @default( add: { value: "$now" }, update:{value:"$now"}) @search

}

"""
A workflow specification node type defines the properties that can be 
associated with a specific workflow specification node.
"""
type WorkflowSpecificationNodeType @key(fields: "iid") {
  """
  Uniquely identifies the workflow specification node type. Required attribute.
  """
  iid: ID!
  acl: [AccessPermission]
  id: String! @id
  name: String @search(by: [hash])
  version: String @search(by: [hash])
  """
  Contains additional information and descriptions of the workflow specification node.
  """
  description: String

  """
  Identifies where the exchanged information fits within the role-based equipment hierarchy.
  """
  hierarchyScope: HierarchyScope

  """
  The workflow specification node type property(s) defines in part this workflow specification node type.
  """
  properties: [WorkflowSpecificationNodeTypeProperty] @hasInverse(field: nodeType)

  """
  The workflow specification node(s) defined in part by this workflow specification node type.
  """
  nodes: [WorkflowSpecificationNode] @hasInverse(field: nodeType)
  
  _createdBy: String
  _createdDateTime: DateTime @default( add: { value: "$now" }) @search
  _modifiedBy: String
  _modifiedDateTime: DateTime @default( add: { value: "$now" }, update:{value:"$now"}) @search

}

"""
A property of a workflow specification node type shall be defined as a workflow
specification node type property. A workflow specification connection type 
property may contain nested workflow specification connection type property(s).

Workflow specification node properties types specify the allowed properties 
that can be associated with a specific workflow specification node.
"""
type WorkflowSpecificationNodeTypeProperty @withSubscription @key(fields: "iid") {
  """
  A unique identification of the property. Required attribute.
  """
  iid: ID!
  id: String! @id
  name: String @search(by: [hash])
  acl: [AccessPermission]
  dataType: DataType
  definitionType: DefinitionType! @default( add:{value:"INSTANCE"})
  effectiveEndDateTime: DateTime @search
  effectiveStartDateTime: DateTime @search
  """
  Additional information about the property.
  """
  description: String

  """
  The default value, set of values, or range of the property.
  """
  value: String @search(by: [exact])

  """
  The unit of measure of the associated property value.
  """
  unitOfMeasure: UnitOfMeasure

  """
  The workflow specification node type is defined in part by this workflow specification node type property.
  """
  nodeType: WorkflowSpecificationNodeType @hasInverse(field: properties)

  """
  The child workflow specification connection type properties of this workflow specification connection type property.
  """
  children: [WorkflowSpecificationNodeTypeProperty] @hasInverse(field: parent)

  """
  The parent workflow specification connection type property of this workflow specification connection type property.
  """
  parent: WorkflowSpecificationNodeTypeProperty @hasInverse(field: children)

  _createdBy: String
  _createdDateTime: DateTime @default( add: { value: "$now" }) @search
  _modifiedBy: String
  _modifiedDateTime: DateTime @default( add: { value: "$now" }, update:{value:"$now"}) @search


}

"""
A workflow specification connection represents a many-to-many link between 
workflow specification nodes. The workflow specification connection type 
defines the allowed multiplicity of the "connects to" and "connects from"
relationships.
"""
type WorkflowSpecificationConnection @withSubscription @key(fields: "iid") {
  """
  Uniquely identifies the workflow specification connection. Required attribute.
  """
  iid: ID!
  acl: [AccessPermission]
  condition: String
  id: String! @id
  name: String @search(by: [hash])
  version: String @search(by: [hash])
  waypoints: [WorkflowWaypoint] @hasInverse (field: connection)
  """
  Contains additional information and descriptions of the workflow specification connection.
  """
  description: String

  """
  The workflow specification defined in part by this workflow specification connection.
  """
  workflowSpecification: WorkflowSpecification! @hasInverse(field: connections)

  """
  The workflow specification connection defined by this workflow specification connection type.
  """
  connectionType: WorkflowSpecificationConnectionType! @hasInverse(field: connections)

  """
  The workflow specification connection property(s) defines in part of this workflow specification connection.
  """
  properties: [WorkflowSpecificationConnectionProperty] @hasInverse(field: connection)
  
  """
  The workflow specification node connected to this workflow specification connection.
  """
  to: WorkflowSpecificationNode! @hasInverse (field: inflows)

  """
  The workflow specification node connected from this workflow specification connection.
  """
  from: WorkflowSpecificationNode! @hasInverse (field: outflows)

  _createdBy: String
  _createdDateTime: DateTime @default( add: { value: "$now" }) @search
  _modifiedBy: String
  _modifiedDateTime: DateTime @default( add: { value: "$now" }, update:{value:"$now"}) @search

}

"""
WorkflowWaypoint: Extension of ISA95 Standard to accommodate BPMN2.0. The 
waypoint stores the information needed to display lines correctly in BPMN diagrams.
"""
type WorkflowWaypoint @withSubscription @key(fields: "iid") {
  iid: ID!
  connection: WorkflowSpecificationConnection! @hasInverse (field: waypoints)
  x: String!
  y: String!
}

"""
A property of a workflow specification connection shall be defined as a 
workflow specification connection property.

A workflow specification connection property may contain nested workflow 
specification connection property(s).

Workflow specification connection property(s) may be used to specify the 
defined properties that can be associated with the specific connection.
"""
type WorkflowSpecificationConnectionProperty @withSubscription @key(fields: "iid") {
  """
  A unique identification of the property. Required attribute.
  """
  iid: ID!

  """
  Additional information about the property.
  """
  description: String

  """
  The default value, set of values, or range of the property.
  """
  value: String @search(by: [exact])

  """
  The unit of measure of the associated property value.
  """
  unitOfMeasure: UnitOfMeasure

  """
  The workflow specification connection defined in part by this workflow specification connection property(s).
  """
  connection: WorkflowSpecificationConnection @hasInverse(field: properties)

  """
  The child workflow specification connection properties of this workflow specification connection property.
  """
  children: [WorkflowSpecificationConnectionProperty] @hasInverse(field: parent)
  
  """
  The parent workflow specification connection property of this workflow specification connection property.
  """
  parent: WorkflowSpecificationConnectionProperty @hasInverse(field: children)

  _createdBy: String
  _createdDateTime: DateTime @default( add: { value: "$now" }) @search
  _modifiedBy: String
  _modifiedDateTime: DateTime @default( add: { value: "$now" }, update:{value:"$now"}) @search
  access: [AccessPermission]
  dataType: DataType
  definitionType: DefinitionType! @default( add:{value:"INSTANCE"})
  effectiveEndDateTime: DateTime @search
  effectiveStartDateTime: DateTime @search
  key: String! @id
  name: String @search(by: [hash])
  version: String @search(by: [hash])
}

"""
A workflow specification connection type specifies the permissible information
on a connection.
"""
type WorkflowSpecificationConnectionType @key(fields: "iid") {
  """
  Uniquely identifies the workflow specification connection type. Required attribute.
  """
  iid: ID!

  """
  Contains additional information and descriptions of the workflow specification connection.
  """
  description: String

  """
  Identifies where the exchanged information fits within the role based equipment hierarchy.
  """
  hierarchyScope: HierarchyScope

  """
  The workflow specification connection(s) defined in part by this workflow specification connection type.
  """
  connections: [WorkflowSpecificationConnection] @hasInverse(field: connectionType)

  """
  The workflow specification connection type property(s) defines in part this workflow specification connection type.
  """
  properties: [WorkflowSpecificationConnectionTypeProperty] @hasInverse(field: connectionType)

  _createdBy: String
  _createdDateTime: DateTime @default( add: { value: "$now" }) @search
  _modifiedBy: String
  _modifiedDateTime: DateTime @default( add: { value: "$now" }, update:{value:"$now"}) @search
  access: [AccessPermission]
  key: String! @id
  name: String @search(by: [hash])
  version: String @search(by: [hash])
}

"""
A property of a workflow specification connection type shall be defined as a workflow specification connection type property.

A workflow specification connection type property(s) specifies the allowed properties that can be associated with specific workflow specification connections.
"""
type WorkflowSpecificationConnectionTypeProperty @withSubscription @key(fields: "iid") {
  """
  A unique identification of the property. Required attribute
  """
  iid: ID!

  access: [AccessPermission]
  dataType: DataType
  definitionType: DefinitionType! @default( add:{value:"INSTANCE"})
  effectiveEndDateTime: DateTime @search
  effectiveStartDateTime: DateTime @search
  id: String! @id
  """
  Additional information about the property.
  """
  description: String

  """
  The default value, set of values, or range of the property.
  """
  value: String @search(by: [exact])

  """
  The unit of measure of the associated property value.
  """
  unitOfMeasure: UnitOfMeasure

  """
  The workflow specification connection type defined in part by this workflow specification connection type property.
  """
  connectionType: WorkflowSpecificationConnectionType @hasInverse(field: properties)

  """
  The child workflow specification connection type properties of this workflow specification connection type property.
  """
  children: [WorkflowSpecificationConnectionTypeProperty] @hasInverse(field: parent)

  """
  The parent workflow specification connection type property of this workflow specification connection type property.
  """
  parent: WorkflowSpecificationConnectionTypeProperty @hasInverse(field: children)
  
  _createdBy: String
  _createdDateTime: DateTime @default( add: { value: "$now" }) @search
  _modifiedBy: String
  _modifiedDateTime: DateTime @default( add: { value: "$now" }, update:{value:"$now"}) @search
}

"""
Form: Extension of ISA95 Standard to accommodate BPMN2.0. User actions within 
BPMN require forms to allow the action to be completed. Forms are specified 
with a JsonSchema and a UI Schema.
"""
type Form @withSubscription @key(fields: "iid") {
  """
  Uniquely identifies the Form. Required attribute.
  """
  iid: ID!
  
  isActive: Boolean @search
  id: String! @id
  workflowSpecificationNodes: [WorkflowSpecificationNode] @hasInverse(field: form)
  jsonSchema: String
  uiSchema: String
}
# ################################################################################
# Work Schedule Information Model
# ################################################################################
#
#
# A request for work shall be listed as a work schedule. A work schedule shall be
# made up of one or more work requests.

# The work schedule may apply to scheduling of production, maintenance, quality test
# and inventory operations, or to other extended categories of activities.
#
# A work schedule may be defined for any specific category of work:
# production, maintenance, quality, or inventory operations,
# or it may be defined for a combination of categories.
# When a combination is selected, then the work requests or segment requirement
# specifies the category of the work.
# ################################################################################
# Work Performance Information Model
# ################################################################################
#
#
# Work performance shall be defined as a collection of work responses that is a
# report on requested manufacturing information. Work responses are responses
# from manufacturing that are associated with a work request. There may be one
# or more work responses for a single work request if the manufacturing facility
# needs to split the work request into smaller elements.
# ################################################################################
# Work Capability Information Model
# ################################################################################
#
#
# The collection of information about the resources for work for selected future
# and past times shall be defined as work capability. This is made up of information
# about committed, available, and unattainable equipment, material, personnel,
# physical assets, and work master capabilities. Work capability describes
# the names, terms, statuses, and quantities of which the manufacturing operations
# and control system has knowledge.
# ################################################################################
# Work Master Capability Information Model
# ################################################################################
#
#
# A representation of a logical grouping of personnel resources, equipment resources,
# physical asset resources, and material that is available, unattainable, committed,
# used, unused, or total for a given work master for a specific time shall be defined
# as a work master capability
# ################################################################################
# Work Alerts Information Model
# ################################################################################
#
#
# A notification of a Level 3 event shall be defined as a work alert.
# Not all events warrant creating a work alert.
# A work alert does not require acknowledgement.
# If acknowledgement is needed, then an alarm model may be used
# (see ISA-18.00.02 (IEC 62682), for information on alarms).
# Work alerts may be generated by any Level 3 activity.
# ################################################################################
# Work Calendar Information Model
# ################################################################################
#
#
# Work calendar definitions define a set of rules that specify specific calendar entries,
# along with repeat rules, duration, starting and ending dates, and times for the entries.
# The entries can be used to generate a work calendar, which is a calendar of specific
# entries for specific dates (and times).
#
# The work calendar model defines an exchange format for exchanging the rules
# ( work calendar definition) or a calendar with specific dates ( work calendar).

"""
Work Calendar domain describes the definition of shift patterns and non-working days
The Work Calendar Definition defines the rule used to determine work calendar entries.
It contains the recurrence time for the rule, the duration of the entry, the entry type, and properties associated with the entry.
Standard Entry Types include Working Time and Non-Working Time. The entry may include property definitions.
The definition uses the rrule.js library to generate calendar events, and the fields available match
the configuration fields required by rrule.js
"""
type WorkCalendarDefinitionEntry @withSubscription @key(fields: "id") {
  id: ID!
  isActive: Boolean @search
  description: String
  hierarchyScope: Equipment
  freq: Frequency!
  startDateTime: DateTime!
  endDateTime: DateTime
  count: Int
  interval: Int
  wkst: Weekday
  byWeekDay: [Weekday]
  byMonth: [Int]
  bySetPos: [Int]
  byMonthDay: [Int]
  byYearDay: [Int]
  byWeekNo: [Int]
  byHour: [Int]
  byMinute: [Int]
  bySecond: [Int]
  duration: String
  entryType: WorkCalendarEntryType!
  properties: [Property]
  calendarEntries: [WorkCalendarEntry] @hasInverse(field: definition)
  workCalendar: WorkCalendar @hasInverse(field: definition)
}

enum Frequency {
  YEARLY
  MONTHLY
  WEEKLY
  DAILY
  HOURLY
  MINUTELY
  SECONDLY
}

enum Weekday {
  MO
  TU
  WE
  TH
  FR
  SA
  SU
}

type WorkCalendarEntry @withSubscription @key(fields: "id") {
  id: ID!
  isActive: Boolean @search
  description: String
  definition: WorkCalendarDefinitionEntry @hasInverse(field: calendarEntries)
  hierarchyScope: Equipment
  startDateTime: DateTime! @search
  finishDateTime: DateTime! @search
  entryType: WorkCalendarEntryType! @search
  properties: [Property]
  workCalendar: WorkCalendar @hasInverse(field: entries)
}

type WorkCalendar @withSubscription @key(fields: "id") {
  id: ID!
  isActive: Boolean @search
  name: String! @id
  description: String
  definition: [WorkCalendarDefinitionEntry] @hasInverse(field: workCalendar)
  entries: [WorkCalendarEntry] @hasInverse(field: workCalendar)
  equipment: [EquipmentVersion] @hasInverse(field: workCalendar)
}

enum WorkCalendarEntryType {
  PlannedBusyTime
  PlannedDowntime
  PlannedShutdown
}
# ################################################################################
# Work Record Information Model
# ################################################################################
#
#
# The operations record model is specified in ISA-95 Part 2.
# The operations record template and operations record specification template are
# abstract types that are not standalone exchange objects.
# These abstract objects are realized in specialized implementations as occurrences
# of the operations event record in Part 2 and the work record in Part 4.
# The operations record model represents a common structure for representing
# bundled information reported in data exchanges.
# The operations record template bundles operations record entry template objects
# by the type of action in the action attribute with defined values of created,
# changed, deleted and observed. The operations record entry template embeds objects
# defined in this standard and manufacturing operations profiles or references to
# external objects. The operations record specification template specifies the
# content and form of objects in an operations record within the associated operations
# record entry template(s).
"""
Access Permissions are labels with attached permission levels that are linked to data objects through the ACL field
in each type.
@auth rules on each type are used to check if the users token has the appropriate permission to access that data
permissionLevels are as follows:
0 = No Permission
1 = Read Permission
2 = Add Permission (Add implies Read
3 = Update Permission (Update implies Add and Read)
4 = Execute Permission (This is not currently used, but may be used when we figure out how to assign permissions to BPMN processes). Execute implies Update, Add, Read
5 = Delete Permission - This means full permissions, Delete, Execute, Update, Add, Read
The @auth rule checks for the maximum permission in the AccessPermissionAggregate filtered by scope in the list of scopes in the users token
"""
type AccessPermission @key(fields: "iid") {
    iid:ID!
    label:String! @search(by: [fulltext, exact])
    permissionLevel:Int! @search
}
"""
Defines the type of the property,
"""
enum Isa95PropertyType {
    """
    The property value is defined for the class as the default instance value, but individual instances of the class may redefine specific values.
    """
    DefaultType 
    
    """
    The property value is defined for the class and there is no value associated with an instance.
    """
    ClassType
    
    """
    The property value of the class is undefined.
    """
    InstanceType
}
# Job Model
# Dependencies
# ACL,  Workflow, ResourceSpecifications,
# ResourceRequirements, OperationsSchedule, OperationsDefinition
# UnitOfMeasure

type JobOrder @withSubscription @key(fields: "iid"){
  iid: ID!
  isActive: Boolean @search
  createdDateTime: DateTime @search
  name: String! @id @search(by: [hash, regexp])
  label: String @search(by: [hash, regexp])
  version: String
  description: String @search(by: [hash])
  parent: JobOrder @hasInverse(field: children)
  children: [JobOrder] @hasInverse(field: parent)
  workType: WorkType @search
  workDefinitionType: String @search(by: [hash])
  duration: Float
  durationUoM: UnitOfMeasure
  materialSpecifications: [MaterialSpecification] @hasInverse(field: jobOrder)
  equipmentSpecifications: [EquipmentSpecification] @hasInverse(field: jobOrder)
  personnelSpecifications: [PersonnelSpecification] @hasInverse(field: jobOrder)
  parameterSpecifications: [ParameterSpecification] @hasInverse(field: jobOrder)
  scheduledStartDateTime: DateTime @search
  scheduledEndDateTime: DateTime @search
  scheduledDuration: Float
  quantity: Float
  quantityUoM: UnitOfMeasure
  priority: Int
  properties: [Property] @hasInverse(field: jobOrder)
  materialRequirements: [MaterialRequirement] @hasInverse(field: jobOrder)
  equipmentRequirements: [EquipmentRequirement] @hasInverse(field: jobOrder)
  personnelRequirements: [PersonnelRequirement] @hasInverse(field: jobOrder)
  hierarchyScope: String
  dispatchStatus: DispatchStatus @search(by: [hash])
  operationsRequest: OperationsRequest @hasInverse(field: jobOrders)
  operationsSegment: OperationsSegment @hasInverse(field: jobOrders)
  segmentRequirement: SegmentRequirement @hasInverse(field: jobOrders)
  jobResponses: [JobResponse] @hasInverse(field: jobOrder)
  jobOrderNotes: [JobOrderNote] @hasInverse(field: jobOrder)
  inflows: [JobOrderDependency] @hasInverse(field: to)
  outflows: [JobOrderDependency] @hasInverse(field: from)
  previous: [JobOrder] @hasInverse(field: next)
  next: [JobOrder] @hasInverse(field: previous)
  workflowSpecification: WorkflowSpecification @hasInverse(field: jobOrders)
  workflowSpecificationNode: WorkflowSpecificationNode @hasInverse(field: jobOrders)
}

"""
Defines the planned relationship between JobOrders. The JobOrderDependency is created from a copy
of the SegmentDependency during the production dispatch activity
"""
type JobOrderDependency {
  iid: ID!
  isActive: Boolean @search
  description: String
  from: JobOrder! @hasInverse(field: outflows)
  to: JobOrder! @hasInverse(field: inflows)
  dependencyType: DependencyType
  dependencyFactor: Float
  factorUoM: UnitOfMeasure
  condition: String
  segmentDependency: SegmentDependency @hasInverse(field: jobOrderDependencies)
}

enum DispatchStatus{
  CREATED
  RELEASED
  PENDING
  ACTIVE
  PARKED
  COMPLETE
  CLOSED
  CANCELED
}

"""
Define the allowable DispatchStatus transitions for JobOrder.dispatchStatus
"""
type JobOrderDispatchStateModel {
  fromStatus: DispatchStatus!
  allowedTransition: [DispatchStatus]
}

type JobOrderNote {
  iid: ID!
  comment: String
  createdDateTime: DateTime
  editedDateTime: DateTime
  createdBy: String
  modifiedBy: String
  isActive: Boolean
  jobOrder: JobOrder @hasInverse(field: jobOrderNotes)
}

type JobResponse @withSubscription @key(fields: "iid"){
  iid: ID!
  name: String @search(by: [hash, regexp])
  isActive: Boolean @search
  createdDateTime: DateTime
  modifiedDateTime: DateTime
  operator: String
  equipment: Equipment @hasInverse(field: jobResponses)
  startDateTime: DateTime @search
  endDateTime: DateTime @search
  productionDate: String @search(by: [hash])
  actualDuration: Float
  jobOrder: JobOrder @hasInverse(field: jobResponses)
  operationsResponse: OperationsResponse @hasInverse(field: jobResponses)
  personnelActual: [PersonnelActual] @hasInverse(field: jobResponse)
  equipmentActual: [EquipmentActual] @hasInverse(field: jobResponse)
  materialActual: [MaterialActual] @hasInverse(field: jobResponse)
  properties: [Property] @hasInverse(field: jobResponse)
  events: [Event] @hasInverse(field: jobResponse)
  workflowSpecification: WorkflowSpecification @hasInverse(field: jobResponses)
  workflowSpecificationNode: WorkflowSpecificationNode @hasInverse(field: jobResponses)
}

enum JobState{
  WAITING
  READY
  RUNNING
  COMPLETED
  ABORTED
  HELD
  SUSPENDED
  CLOSED
}
# ################################################################################
# Start of Libre System entities here
# ################################################################################

"""
Store the heartbeat timestamps of connected libre-services.
microservices can subscribe to this entity to check the status of their subscription
"""
type LibreService @withSubscription @key(fields: "id"){
  id: ID!
  name: String! @id
  heartbeat: DateTime
}

type DataSubscription @withSubscription @key(fields: "id"){
  id: ID!
  name: String! @id
  
  """
  The MQTT Topic to publish this subscription to.
  """
  topic: String!

  """
  The GraphQL Subscription query to use.
  """
  query: String!

  """
  If the subscription returns a list, it can be split into separate messages in sub-topics using the id field.
  """
  split: Boolean!
}

# ################################################################################
# Start of Menu data model and enumerations here
# ################################################################################

type Menu @auth(
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  query: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMenu @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
    {rule: """ query{ queryMenu(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  add: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMenu @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
    {rule: """ query{ queryMenu(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  delete: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMenu @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
    {rule: """ query{ queryMenu(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
){
  iid: ID!
  label: String! @search(by: [hash])
  acl:[AccessPermission]
  parent: Menu @hasInverse(field: children)
  children: [Menu!] @hasInverse(field: parent)
  menuPage: String
  icon: String
  isSection: Boolean!
  isPage: Boolean!
  orderNumber: Int
}

################################
# Additions for mes processing
#
type EquipmentNameAlias @withSubscription {
  iid: ID!
	equipment: Equipment!
	alias: String! @search(by: [fulltext])
	system: String! @search(by: [fulltext])
}

type PropertyNameAlias @withSubscription {
  iid: ID!
	property: Property! @hasInverse(field: propertyNameAliases)
	alias: String! @search(by: [fulltext,hash])
	system: String! @search(by: [fulltext,hash])
}

type PropertyValueAlias @withSubscription {
  iid: ID!
	property: Property!
	value: String! @search(by: [fulltext])
	alias: String! @search(by: [fulltext])
	system: String! @search(by: [fulltext])
}


enum DataType {
  BOOL
  INT
  INT32
  FLOAT64
  FLOAT
  STRING
}

"""
Data Providers are the client libraries that have been implemented in the edge agent.
We need to make these plugins that that the library can be extended easily.
At the moment, MQTT is all we have. We will add OPC-UA next
"""
enum DataProvider {
  MQTT
  OPCUA
}

enum EquipmentElementLevel {
  Enterprise
  Site
  Area
  ProcessCell
  Unit
  ProductionLine
  WorkCell
  ProductionUnit
  Warehouse
  StorageZone
  StorageUnit
  WorkCenter
  WorkUnit
  EquipmentModule
  ControlModule
  Other
}

type Property @withSubscription @key(fields: "iid"){
  iid: ID!
  isActive: Boolean @search
  createdDateTime: DateTime @search
  name: String! @search(by: [hash])
  description: String! @search(by: [hash])
  dataType: DataType
  definedBy: Property
  expression: String
  value: String
  unitOfMeasure: UnitOfMeasure
  storeHistory: Boolean
  isTestedBy: [TestSpecification]
  operationsRequest: OperationsRequest @hasInverse(field: properties)
  jobOrder: JobOrder @hasInverse(field: properties)
  jobResponse: JobResponse @hasInverse(field: properties)
  propertyNameAliases: [PropertyNameAlias] @hasInverse(field: property)
  parameterSpecifications: [ParameterSpecification] @hasInverse(field: property)
  segmentRequirement: SegmentRequirement @hasInverse(field: properties)
}enum VersionState {
    DRAFT
    FOR_REVIEW
    APPROVED
    ACTIVE
    DEPRECATED
}